{"version":3,"sources":["../src/core/response.ts","../src/core/request.ts","../src/models/errors/bad-credentials.ts","../src/models/errors/bad-double-auth.ts","../src/models/errors/double-auth-required.ts","../src/models/errors/invalid-version.ts","../src/models/errors/session-token-required.ts","../src/models/errors/unknown-enum.ts","../src/models/account-kind.ts","../src/models/attendance-item-kind.ts","../src/models/cantine.ts","../src/models/document-kind.ts","../src/models/files.ts","../src/models/grade-kind.ts","../src/models/timeline-item-kind.ts","../src/models/timetable-item-kind.ts","../src/models/workspace-item-kind.ts","../src/api/account/edforms.ts","../src/decoders/attendance-item.ts","../src/api/student/attendance.ts","../src/decoders/cantine.ts","../src/api/student/cantine.ts","../src/decoders/document-kind.ts","../src/decoders/document.ts","../src/api/student/documents.ts","../src/api/student/files.ts","../src/decoders/grade-value.ts","../src/decoders/skill.ts","../src/decoders/grade.ts","../src/decoders/grades-overview.ts","../src/decoders/period.ts","../src/api/student/grades.ts","../src/decoders/dates.ts","../src/decoders/homepage-timeline-item.ts","../src/api/student/homepageTimeline.ts","../src/decoders/homework.ts","../src/api/student/homeworks.ts","../src/decoders/messages-list.ts","../src/api/student/messages.ts","../src/decoders/timeline-item.ts","../src/api/student/timeline.ts","../src/decoders/timetable-item.ts","../src/api/student/timetable.ts","../src/api/student/visios.ts","../src/decoders/workspace-item.ts","../src/api/student/workspace.ts","../src/decoders/double-auth.ts","../src/decoders/double-auth-challenge.ts","../src/api/double-auth.ts","../src/decoders/account-kind.ts","../src/decoders/account.ts","../src/encoders/double-auth.ts","../src/api/login.ts"],"names":["FileKind","decode","request"],"mappings":";;;;AAKA,IAAM,SAAA,GAAY,CAAC,KAAkB,KAAA;AACnC,EAAA,OAAA,CACG,KAAM,CAAA,UAAA,CAAW,GAAG,CAAA,IAAK,MAAM,UAAW,CAAA,GAAG,CAC7C,MAAA,KAAA,CAAM,QAAS,CAAA,GAAG,CAAK,IAAA,KAAA,CAAM,SAAS,GAAG,CAAA,CAAA,CAAA;AAE9C,CAAA,CAAA;AAEO,IAAM,WAAN,MAAe;AAAA,EACb,MAAA,CAAA;AAAA,EACA,KAAA,CAAA;AAAA,EACA,YAA8B,GAAA,IAAA,CAAA;AAAA,EAC9B,OAAyB,GAAA,IAAA,CAAA;AAAA,EACzB,IAAA,CAAA;AAAA,EAEA,YAAY,QAA0B,EAAA;AAC3C,IAAK,IAAA,CAAA,KAAA,GAAQ,qBAAsB,CAAA,QAAA,EAAU,SAAS,CAAA,CAAA;AAEtD,IAAM,MAAA,YAAA,GAAe,qBAAsB,CAAA,QAAA,EAAU,cAAc,CAAA,CAAA;AAEnE,IACE,IAAA,CAAC,cAAc,UAAW,CAAA,kBAAkB,KAC5C,CAAC,SAAA,CAAU,QAAS,CAAA,OAAO,CAC3B,EAAA;AACA,MAAA,IAAA,CAAK,SAAS,MAAO,CAAA,QAAA;AAAA,QACnB,qBAAA,CAAsB,UAAU,QAAQ,CAAA;AAAA,QACxC,EAAA;AAAA,OACF,CAAA;AAAA,KAEG,MAAA;AACH,MAAA,MAAM,OAAU,GAAA,IAAA,CAAK,KAAM,CAAA,QAAA,CAAS,OAAO,CAAA,CAAA;AAE3C,MAAA,IAAA,CAAK,SAAS,OAAQ,CAAA,IAAA,CAAA;AACtB,MAAA,IAAA,CAAK,OAAO,OAAQ,CAAA,IAAA,CAAA;AACpB,MAAA,IAAA,CAAK,UAAU,OAAQ,CAAA,OAAA,CAAA;AAEvB,MAAA,IAAI,WAAW,OAAS,EAAA;AACtB,QAAA,IAAA,CAAK,QAAQ,OAAQ,CAAA,KAAA,CAAA;AAAA,OACvB;AAAA,KACF;AAAA,GACF;AACF,CAAA,CAAA;;;ACtCO,IAAM,UAAN,MAAc;AAAA,EACZ,GAAA,CAAA;AAAA,EACA,OAAA,CAAA;AAAA,EACA,MAAA,CAAA;AAAA,EACA,OAAA,CAAA;AAAA,EAEA,YAAY,IAAc,EAAA;AAC/B,IAAA,IAAA,CAAK,GAAM,GAAA,IAAI,GAAI,CAAA,CAAA,+BAAA,EAAkC,IAAI,CAAE,CAAA,CAAA,CAAA;AAC3D,IAAK,IAAA,CAAA,OAAA,GAAU,EAAE,YAAA,EAAc,yBAA0B,EAAA,CAAA;AAAA,GAC3D;AAAA,EAEO,SAAS,KAAwB,EAAA;AACtC,IAAK,IAAA,CAAA,OAAA,CAAQ,SAAS,CAAI,GAAA,KAAA,CAAA;AAC1B,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EAEO,aAAyB,GAAA;AAC9B,IAAA,IAAA,CAAK,GAAI,CAAA,YAAA,CAAa,GAAI,CAAA,GAAA,EAAK,OAAO,CAAA,CAAA;AACtC,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EAEO,YAAY,IAAoB,EAAA;AACrC,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AACd,IAAA,IAAA,CAAK,OAAU,GAAA,CAAA,KAAA,EAAQ,IAAK,CAAA,SAAA,CAAU,IAAI,CAAC,CAAA,CAAA,CAAA;AAC3C,IAAK,IAAA,CAAA,OAAA,CAAQ,cAAc,CAAI,GAAA,mCAAA,CAAA;AAC/B,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EAEA,MAAa,IAAK,CAAA,OAAA,GAAmB,cAAmC,EAAA;AACtE,IAAM,MAAA,QAAA,GAAW,MAAM,OAAA,CAAQ,IAAqB,CAAA,CAAA;AACpD,IAAO,OAAA,IAAI,SAAS,QAAQ,CAAA,CAAA;AAAA,GAC9B;AAAA,EAEA,MAAa,OAAQ,CAAA,OAAA,GAAmB,cAAgB,EAAA;AACtD,IAAO,OAAA,MAAM,QAAQ,IAAqB,CAAA,CAAA;AAAA,GAC5C;AACF,CAAA,CAAA;;;AC3Ca,IAAA,cAAA,GAAN,cAA6B,KAAM,CAAA;AAAA,EACjC,WAAc,GAAA;AACnB,IAAA,KAAA,CAAM,6CAA6C,CAAA,CAAA;AACnD,IAAA,IAAA,CAAK,IAAO,GAAA,gBAAA,CAAA;AAAA,GACd;AACF,EAAA;;;ACLa,IAAA,aAAA,GAAN,cAA4B,KAAM,CAAA;AAAA,EAChC,WAAc,GAAA;AACnB,IAAA,KAAA,CAAM,0BAA0B,CAAA,CAAA;AAChC,IAAA,IAAA,CAAK,IAAO,GAAA,eAAA,CAAA;AAAA,GACd;AACF,EAAA;;;ACLa,IAAA,kBAAA,GAAN,cAAiC,KAAM,CAAA;AAAA,EACrC,WAAc,GAAA;AACnB,IAAA,KAAA,CAAM,gCAAgC,CAAA,CAAA;AACtC,IAAA,IAAA,CAAK,IAAO,GAAA,oBAAA,CAAA;AAAA,GACd;AACF,EAAA;;;ACLa,IAAA,cAAA,GAAN,cAA6B,KAAM,CAAA;AAAA,EACjC,WAAc,GAAA;AACnB,IAAA,KAAA;AAAA,MACE,0FAAA;AAAA,KACF,CAAA;AACA,IAAA,IAAA,CAAK,IAAO,GAAA,gBAAA,CAAA;AAAA,GACd;AACF,EAAA;;;ACPa,IAAA,oBAAA,GAAN,cAAmC,KAAM,CAAA;AAAA,EACvC,WAAc,GAAA;AACnB,IAAA,KAAA,CAAM,6CAA6C,CAAA,CAAA;AACnD,IAAA,IAAA,CAAK,IAAO,GAAA,sBAAA,CAAA;AAAA,GACd;AACF,EAAA;;;ACLa,IAAA,gBAAA,GAAN,cAA+B,KAAM,CAAA;AAAA,EACnC,WAAA,CAAY,OAAe,KAAe,EAAA;AAC/C,IAAA,KAAA,CAAM,CAAmC,gCAAA,EAAA,KAAK,CAAe,YAAA,EAAA,KAAK,CAAG,CAAA,CAAA,CAAA,CAAA;AACrE,IAAA,IAAA,CAAK,IAAO,GAAA,kBAAA,CAAA;AAAA,GACd;AACF,EAAA;;;ACLO,IAAM,WAAc,GAAA;AAAA,EACzB,OAAS,EAAA,GAAA;AAAA;AAAA;AAAA;AAAA;AAKX,EAAA;;;ACNO,IAAM,kBAAqB,GAAA;AAAA,EAChC,QAAU,EAAA,UAAA;AAAA,EACV,MAAQ,EAAA,QAAA;AAAA,EACR,OAAS,EAAA,SAAA;AAAA,EACT,QAAU,EAAA,UAAA;AACZ,EAAA;;;ACLO,IAAM,mBAAsB,GAAA;AAAA,EACjC,MAAQ,EAAA,QAAA;AAAA,EACR,OAAS,EAAA,SAAA;AAAA,EACT,QAAU,EAAA,WAAA;AAAA,EACV,QAAU,EAAA,UAAA;AAAA,EACV,MAAQ,EAAA,QAAA;AAAA,EACR,QAAU,EAAA,UAAA;AAAA,EACV,MAAQ,EAAA,QAAA;AACV,EAAA;AAEO,IAAM,gBAAmB,GAAA;AAAA,EAC9B,SAAW,EAAA,WAAA;AAAA,EACX,KAAO,EAAA,OAAA;AAAA,EACP,KAAO,EAAA,OAAA;AACT,EAAA;;;ACdO,IAAM,YAAe,GAAA;AAAA,EAC1B,MAAQ,EAAA,MAAA;AAAA,EACR,QAAU,EAAA,KAAA;AAAA,EACV,UAAY,EAAA,QAAA;AAAA;AAAA,EACZ,OAAS,EAAA,KAAA;AAAA;AAAA,EACT,YAAc,EAAA,OAAA;AAAA;AAAA,EACd,QAAU,EAAA,aAAA;AAAA,EACV,KAAO,EAAA,EAAA;AACT,EAAA;;;ACRY,IAAA,QAAA,qBAAAA,SAAL,KAAA;AACL,EAAAA,UAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,UAAA,UAAW,CAAA,GAAA,aAAA,CAAA;AACX,EAAAA,UAAA,aAAc,CAAA,GAAA,cAAA,CAAA;AACd,EAAAA,UAAA,aAAc,CAAA,GAAA,2BAAA,CAAA;AACd,EAAAA,UAAA,gBAAiB,CAAA,GAAA,eAAA,CAAA;AACjB,EAAAA,UAAA,OAAQ,CAAA,GAAA,EAAA,CAAA;AANE,EAAAA,OAAAA,SAAAA,CAAAA;AAAA,CAAA,EAAA,QAAA,IAAA,EAAA,EAAA;;;ACAL,IAAM,SAAY,GAAA;AAAA,EACvB,KAAO,EAAA,CAAA,CAAA;AAAA,EACP,KAAO,EAAA,CAAA;AAAA,EACP,MAAQ,EAAA,CAAA;AAAA,EACR,QAAU,EAAA,CAAA;AAAA,EACV,SAAW,EAAA,CAAA;AAAA,EACX,OAAS,EAAA,CAAA;AACX,EAAA;;;ACPO,IAAM,gBAAmB,GAAA;AAAA,EAC9B,IAAM,EAAA,MAAA;AAAA,EACN,WAAa,EAAA,aAAA;AAAA,EACb,SAAW,EAAA,WAAA;AAAA,EACX,gBAAkB,EAAA,kBAAA;AAAA,EAClB,SAAW,EAAA,WAAA;AAAA,EACX,UAAY,EAAA,YAAA;AAAA,EACZ,eAAiB,EAAA,iBAAA;AAAA,EACjB,QAAU,EAAA,UAAA;AACZ,EAAA;;;ACTO,IAAM,iBAAoB,GAAA;AAAA,EAC/B,KAAO,EAAA,OAAA;AAAA,EACP,UAAY,EAAA,YAAA;AAAA,EACZ,KAAO,EAAA,OAAA;AAAA,EACP,SAAW,EAAA,WAAA;AAAA,EACX,QAAU,EAAA,UAAA;AACZ,EAAA;;;ACNO,IAAM,iBAAoB,GAAA;AAAA,EAC/B,KAAO,EAAA,OAAA;AAAA;AAET,EAAA;;;ACAa,IAAA,cAAA,GAAiB,OAC5B,OAAA,EACA,OAC4B,KAAA;AAC5B,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAM,MAAA,OAAA,GAAU,IAAI,OAAA,CAAQ,yBAAyB,CAAA,CAClD,aAAc,EAAA,CACd,QAAS,CAAA,OAAA,CAAQ,KAAK,CAAA,CACtB,WAAY,CAAA;AAAA,IACX,UAAU,OAAQ,CAAA,EAAA;AAAA,IAClB,YAAY,OAAQ,CAAA,IAAA;AAAA,GACrB,CAAA,CAAA;AAEH,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAGzB,EAAA,OAAO,QAAS,CAAA,IAAA,CAAA;AAClB,EAAA;;;ACpBO,IAAM,oBAAA,GAAuB,CAAC,IAA8B,KAAA;AACjE,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,WAAW,IAAK,CAAA,OAAA;AAAA,IAChB,aAAa,IAAK,CAAA,QAAA;AAAA,IAClB,QAAQ,IAAK,CAAA,KAAA;AAAA,IACb,IAAM,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,IAAI,CAAA;AAAA,IACxB,WAAa,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,eAAe,CAAA;AAAA,IAC1C,OAAO,IAAK,CAAA,OAAA;AAAA,IACZ,SAAS,IAAK,CAAA,GAAA;AAAA,IACd,SAAS,IAAK,CAAA,WAAA;AAAA,IACd,WAAW,IAAK,CAAA,QAAA;AAAA,IAChB,mBAAmB,IAAK,CAAA,iBAAA;AAAA,IACxB,qBAAqB,IAAK,CAAA,UAAA;AAAA,IAC1B,aAAa,IAAK,CAAA,OAAA;AAAA,IAClB,MAAM,IAAK,CAAA,MAAA;AAAA,IACX,MAAM,IAAK,CAAA,WAAA;AAAA,IACX,aACE,IAAK,CAAA,WAAA,KAAgB,EACjB,GAAA,IAAA,CAAK,cACL,IAAK,CAAA,eAAA,CACJ,WAAY,EAAA,CACZ,QAAQ,MAAQ,EAAA,GAAG,CACnB,CAAA,OAAA,CAAQ,4BAAsB,EAAE,CAAA;AAAA,GACzC,CAAA;AACF,CAAA,CAAA;;;ACZa,IAAA,iBAAA,GAAoB,OAC/B,OAAA,EACA,OACgC,KAAA;AAChC,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA,CAAQ,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAA4B,0BAAA,CAAA,CAAA,CAC1E,aAAc,EAAA,CACd,SAAS,OAAQ,CAAA,KAAK,CACtB,CAAA,WAAA,CAAY,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAM,MAAA,WAAA,GAAc,SAAS,IAAK,CAAA,uBAAA,CAAA;AAClC,EAAM,MAAA,QAAA,GAAW,SAAS,IAAK,CAAA,eAAA,CAAA;AAC/B,EAAM,MAAA,UAAA,GAAa,SAAS,IAAK,CAAA,SAAA,CAAA;AAEjC,EAAO,OAAA;AAAA,IACL,WAAA,EAAa,WAAY,CAAA,GAAA,CAAI,oBAAoB,CAAA;AAAA,IACjD,QAAA,EAAU,QAAS,CAAA,GAAA,CAAI,oBAAoB,CAAA;AAAA,IAC3C,UAAA,EAAY,UAAW,CAAA,GAAA,CAAI,oBAAoB,CAAA;AAAA,GACjD,CAAA;AACF,EAAA;;;AC/BO,IAAM,iBAAA,GAAoB,CAAC,IAAmC,KAAA;AACnE,EAAA,MAAM,KAAsC,GAAA;AAAA,IAC1C,MAAQ,EAAA;AAAA,MACN,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,IACA,OAAS,EAAA;AAAA,MACP,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,IACA,QAAU,EAAA;AAAA,MACR,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,IACA,QAAU,EAAA;AAAA,MACR,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,IACA,QAAU,EAAA;AAAA,MACR,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,SAAW,EAAA,KAAA;AAAA,MACX,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,MACnC,KAAA,EAAO,IAAK,CAAA,MAAA,CAAO,WAAgB,KAAA,GAAA;AAAA,KACrC;AAAA,GACF,CAAA;AACA,EAAO,OAAA;AAAA,IACL,OAAO,IAAK,CAAA,KAAA;AAAA,IACZ,IAAA,EAAM,KAAK,MAAO,CAAA,MAAA;AAAA,IAClB,KAAA;AAAA,GACF,CAAA;AACF,CAAA,CAAA;AAEO,IAAM,aAAA,GAAgB,CAAC,IAA8B,KAAA;AAC1D,EAAO,OAAA;AAAA,IACL,WAAA,EAAa,KAAK,MAAO,CAAA,WAAA;AAAA,GAC3B,CAAA;AACF,CAAA,CAAA;;;AC7Ca,IAAA,cAAA,GAAiB,OAC5B,OAC6B,KAAA;AAC7B,EAAM,MAAA,YAAA,GAAe,QAAQ,OAAQ,CAAA,IAAA;AAAA,IACnC,CAAC,CAAW,KAAA,CAAA,CAAE,IAAS,KAAA,cAAA;AAAA,GACzB,CAAA;AACA,EAAM,MAAA,OAAA,GAAU,QAAQ,OAAQ,CAAA,IAAA;AAAA,IAC9B,CAAC,CAAW,KAAA,CAAA,CAAE,IAAS,KAAA,iBAAA;AAAA,GACzB,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,WAAa,EAAA,YAAA,CAAa,MAAU,IAAA,iBAAA,CAAkB,YAAY,CAAA;AAAA,IAClE,OAAS,EAAA,OAAA,CAAQ,MAAU,IAAA,aAAA,CAAc,OAAO,CAAA;AAAA,GAClD,CAAA;AACF,EAAA;;;ACvBO,IAAM,kBAAA,GAAqB,CAAC,IAA4B,KAAA;AAC7D,EAAO,OAAA,IAAA,CAAA;AACT,CAAA,CAAA;;;ACDO,IAAM,cAAA,GAAiB,CAAC,IAAwB,KAAA;AACrD,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,MAAM,IAAK,CAAA,OAAA;AAAA,IACX,IAAM,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,IAAI,CAAA;AAAA,IACxB,IAAA,EAAM,kBAAmB,CAAA,IAAA,CAAK,IAAI,CAAA;AAAA,IAClC,iBAAA,EAAmB,KAAK,iBAAqB,IAAA,KAAA;AAAA,IAC7C,SAAA,EAAW,KAAK,SAAa,IAAA,KAAA,CAAA;AAAA,GAC/B,CAAA;AACF,CAAA,CAAA;;;ACLO,IAAM,gBAAmB,GAAA,OAC9B,OACA,EAAA,OAAA,GAAU,EACc,KAAA;AACxB,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,0CAA0C,OAAO,CAAA,CAAA;AAAA,GACnD,CACG,aAAc,EAAA,CACd,WAAY,CAAA,EAAE,aAAe,EAAA,CAAA,EAAG,CAAA,CAChC,QAAS,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAEzB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,MAAM,YAAe,GAAA;AAAA,IACnB,GAAG,SAAS,IAAK,CAAA,QAAA;AAAA,IACjB,GAAG,SAAS,IAAK,CAAA,KAAA;AAAA,IACjB,GAAG,SAAS,IAAK,CAAA,WAAA;AAAA,IACjB,GAAG,SAAS,IAAK,CAAA,cAAA;AAAA,IACjB,GAAG,SAAS,IAAK,CAAA,YAAA;AAAA,GACnB,CAAA;AACA,EAAO,OAAA,YAAA,CAAa,IAAI,cAAc,CAAA,CAAA;AACxC,EAAA;;;ACzBO,IAAM,8BAAiC,GAAA,CAC5C,IACA,EAAA,EAAA,EACA,OAAO,EACJ,KAAA;AACH,EAAM,MAAA,QAAA,GAAW,2CAA2C,EAAE,CAAA,CAAA,CAAA;AAC9D,EAAI,IAAA,GAAA,CAAA;AACJ,EAAA,QAAQ,IAAM;AAAA,IACZ,KAAA,eAAA;AACE,MAAA,GAAA,GAAM,QAAW,GAAA,IAAA,KAAS,EAAK,GAAA,CAAA,0BAAA,EAA6B,IAAI,CAAK,CAAA,GAAA,EAAA,CAAA;AACrE,MAAA,MAAA;AAAA,IACF,KAAA,cAAA;AACE,MAAA,GAAA,GAAM,QAAW,GAAA,IAAA,KAAS,EAAK,GAAA,CAAA,cAAA,EAAiB,IAAI,CAAK,CAAA,GAAA,EAAA,CAAA;AACzD,MAAA,MAAA;AAAA,IACF;AACE,MAAM,GAAA,GAAA,CAAA,EAAG,QAAQ,CAAA,iBAAA,EAAoB,IAAI,CAAA,CAAA,CAAA;AAAA,GAC7C;AACA,EAAO,OAAA,GAAA,CAAA;AACT,EAAA;AAOO,IAAM,UAAU,OACrB,OAAA,EACA,IACA,EAAA,EAAA,EACA,OAAO,EACe,KAAA;AACtB,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,GAAM,GAAA,8BAAA,CAA+B,IAAM,EAAA,EAAA,EAAI,IAAI,CAAA,CAAA;AACzD,EAAA,MAAM,OAAU,GAAA,IAAI,OAAQ,CAAA,GAAG,EAC5B,aAAc,EAAA,CACd,WAAY,CAAA,EAAE,eAAe,CAAE,EAAC,CAChC,CAAA,QAAA,CAAS,QAAQ,KAAK,CAAA,CAAA;AAEzB,EAAO,OAAA,OAAA,CAAQ,OAAQ,CAAA,OAAA,CAAQ,OAAO,CAAA,CAAA;AACxC,EAAA;;;AC1CO,IAAM,gBAAA,GAAmB,CAAC,KAA8B,KAAA;AAC7D,EAAA,IAAI,CAAC,KAAA;AACH,IAAO,OAAA;AAAA,MACL,MAAM,SAAU,CAAA,KAAA;AAAA,MAChB,MAAQ,EAAA,CAAA;AAAA,KACV,CAAA;AAEF,EAAQ,QAAA,KAAA,CAAM,MAAQ;AAAA,IACpB,KAAK,MAAA;AACH,MAAO,OAAA;AAAA,QACL,MAAM,SAAU,CAAA,QAAA;AAAA,QAChB,MAAQ,EAAA,CAAA;AAAA,OACV,CAAA;AAAA,IACF,KAAK,KAAA;AACH,MAAO,OAAA;AAAA,QACL,MAAM,SAAU,CAAA,MAAA;AAAA,QAChB,MAAQ,EAAA,CAAA;AAAA,OACV,CAAA;AAAA,IACF,KAAK,IAAA;AACH,MAAO,OAAA;AAAA,QACL,MAAM,SAAU,CAAA,SAAA;AAAA,QAChB,MAAQ,EAAA,CAAA;AAAA,OACV,CAAA;AAAA,IACF,KAAK,IAAA;AACH,MAAO,OAAA;AAAA,QACL,MAAM,SAAU,CAAA,OAAA;AAAA,QAChB,MAAQ,EAAA,CAAA;AAAA,OACV,CAAA;AAAA,IACF;AACE,MAAI,IAAA;AACF,QAAO,OAAA;AAAA,UACL,MAAM,SAAU,CAAA,KAAA;AAAA,UAChB,QAAQ,MAAO,CAAA,KAAA,CAAM,UAAW,CAAA,GAAA,EAAK,GAAG,CAAC,CAAA;AAAA,SAC3C,CAAA;AAAA,OAEI,CAAA,MAAA;AACJ,QAAO,OAAA;AAAA,UACL,MAAM,SAAU,CAAA,KAAA;AAAA,UAChB,MAAQ,EAAA,CAAA;AAAA,SACV,CAAA;AAAA,OACF;AAAA,GACJ;AACF,CAAA,CAAA;;;AC1CO,IAAM,WAAA,GAAc,CAAC,IAAqB,KAAA;AAC/C,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,YAAA;AAAA,IACT,MAAM,IAAK,CAAA,iBAAA;AAAA,IACX,aAAa,IAAK,CAAA,UAAA;AAAA,IAClB,KAAA,EAAO,MAAO,CAAA,IAAA,CAAK,MAAM,CAAA;AAAA,GAC3B,CAAA;AACF,CAAA,CAAA;;;ACLO,IAAM,WAAA,GAAc,CAAC,IAAqB,KAAA;AAC/C,EAAO,OAAA;AAAA,IACL,SAAS,IAAK,CAAA,MAAA;AAAA,IACd,OAAA,EAAS,gBAAiB,CAAA,IAAA,CAAK,aAAa,CAAA;AAAA,IAC5C,YAAY,IAAK,CAAA,UAAA;AAAA,IACjB,MAAQ,EAAA,IAAA,CAAK,iBAAkB,CAAA,GAAA,CAAI,WAAW,CAAA;AAAA,IAC9C,WAAA,EAAa,MAAO,CAAA,IAAA,CAAK,IAAI,CAAA;AAAA,IAC7B,IAAM,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,IAAI,CAAA;AAAA,IACxB,UAAU,IAAK,CAAA,UAAA;AAAA,IACf,GAAA,EAAK,gBAAiB,CAAA,IAAA,CAAK,SAAS,CAAA;AAAA,IACpC,GAAA,EAAK,gBAAiB,CAAA,IAAA,CAAK,SAAS,CAAA;AAAA,IACpC,KAAO,EAAA,IAAA,CAAK,OAAQ,CAAA,UAAA,CAAW,KAAK,GAAG,CAAA;AAAA,IACvC,MAAQ,EAAA;AAAA,MACN,IAAI,IAAK,CAAA,WAAA;AAAA;AAAA,MAET,IAAM,EAAA,EAAA;AAAA,KACR;AAAA,IACA,OAAS,EAAA;AAAA,MACP,IAAI,IAAK,CAAA,WAAA;AAAA,MACT,cAAc,IAAK,CAAA,eAAA;AAAA,MACnB,MAAM,IAAK,CAAA,cAAA;AAAA,KACb;AAAA,IACA,iBAAiB,IAAK,CAAA,QAAA;AAAA,IACtB,oBAAoB,IAAK,CAAA,UAAA;AAAA,IACzB,KAAA,EAAO,gBAAiB,CAAA,IAAA,CAAK,MAAM,CAAA;AAAA,GACrC,CAAA;AACF,CAAA,CAAA;;;AC3BO,IAAM,aAAA,GAAgB,CAAC,IAA8B,KAAA;AAC1D,EAAA,MAAM,WAA2B,EAAC,CAAA;AAClC,EAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,WAAA,CAAY,UAAc,IAAA,EAAA,CAAA;AAC7C,EAAM,MAAA,kBAAA,GAAqB,KAAK,WAAY,CAAA,eAAA,CAAA;AAC5C,EAAM,MAAA,gBAAA,GAAmB,KAAK,WAAY,CAAA,mBAAA,CAAA;AAE1C,EAAW,KAAA,MAAA,MAAA,IAAU,KAAK,QAAU,EAAA;AAClC,IAAA,IAAI,EAAE,gBAAA,KAAqB,KAAS,IAAA,MAAA,CAAO,WAAW,IAAO,CAAA,EAAA;AAC3D,MAAM,MAAA,QAAA,GAAW,OAAO,gBAAiB,CAAA,WAAA,CAAA;AACzC,MAAS,QAAA,CAAA,MAAA,CAAO,SAAS,CAAI,GAAA;AAAA,QAC3B,YAAc,EAAA,gBAAA,CAAiB,MAAO,CAAA,gBAAA,CAAiB,aAAa,CAAA;AAAA,QACpE,cAAA,EAAgB,qBACZ,gBAAiB,CAAA,MAAA,CAAO,iBAAiB,eAAe,CAAA,GACxD,kCAAkC,MAAM,CAAA;AAAA,QAC5C,UAAU,EAAC;AAAA,OACb,CAAA;AACA,MAAA,KAAA,MAAW,WAAW,QAAU,EAAA;AAC9B,QAAA,QAAA,CAAS,MAAO,CAAA,SAAS,CAAE,CAAA,QAAA,CAAS,IAAK,CAAA;AAAA,UACvC,MAAM,OAAQ,CAAA,UAAA;AAAA,UACd,IAAI,OAAQ,CAAA,WAAA;AAAA,UACZ,gBAAgB,OAAQ,CAAA,eAAA;AAAA,UACxB,gBAAgB,OAAQ,CAAA,WAAA;AAAA;AAAA,UAExB,KAAO,EAAA,QAAA;AAAA,UACP,WAAA,EAAa,MAAO,CAAA,OAAA,CAAQ,IAAI,CAAA;AAAA,UAChC,YAAc,EAAA,gBAAA;AAAA,YACZ,OAAQ,CAAA,aAAA,EAAe,OAAQ,CAAA,GAAA,EAAK,GAAG,CAAA;AAAA,WACzC;AAAA,UACA,YAAY,gBAAiB,CAAA,OAAA,CAAQ,YAAY,OAAQ,CAAA,GAAA,EAAK,GAAG,CAAC,CAAA;AAAA,UAClE,YAAY,gBAAiB,CAAA,OAAA,CAAQ,YAAY,OAAQ,CAAA,GAAA,EAAK,GAAG,CAAC,CAAA;AAAA,UAClE,gBAAgB,gBAAiB,CAAA,OAAA,CAAQ,SAAS,OAAQ,CAAA,GAAA,EAAK,GAAG,CAAC,CAAA;AAAA,UACnE,KAAO,EAAA,gBAAA,CAAiB,KAAM,CAAA,QAAA,EAAU,CAAA;AAAA,SACzC,CAAA,CAAA;AAAA,OACH;AAAA,KACF;AAAA,GACF;AACA,EAAO,OAAA,QAAA,CAAA;AACT,CAAA,CAAA;AAEA,SAAS,kCAAkC,MAAa,EAAA;AACtD,EAAA,IAAI,KAAQ,GAAA,CAAA,CAAA;AACZ,EAAA,IAAI,GAAM,GAAA,CAAA,CAAA;AAEV,EAAM,MAAA,QAAA,GAAW,OAAO,gBAAiB,CAAA,WAAA,CAAA;AAEzC,EAAA,KAAA,MAAW,WAAW,QAAU,EAAA;AAC9B,IAAI,IAAA,OAAA,CAAQ,YAAY,EAAI,EAAA;AAC1B,MAAM,MAAA,KAAA,GAAQ,iBAAiB,OAAQ,CAAA,OAAA,EAAS,QAAQ,GAAK,EAAA,GAAG,CAAC,CAAE,CAAA,MAAA,CAAA;AACnE,MAAA,MAAM,IAAO,GAAA,OAAA,CAAQ,IAAS,KAAA,CAAA,GAAI,IAAI,OAAQ,CAAA,IAAA,CAAA;AAC9C,MAAS,KAAA,IAAA,IAAA,CAAA;AACT,MAAA,GAAA,IAAO,KAAQ,GAAA,IAAA,CAAA;AAAA,KACjB;AAAA,GACF;AAEA,EAAA,OAAO,gBAAkB,CAAA,CAAA,GAAA,GAAM,KAAO,EAAA,QAAA,EAAU,CAAA,CAAA;AAClD,CAAA;;;ACxDO,IAAM,YAAA,GAAe,CAAC,IAAsB,KAAA;AACjD,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,SAAA;AAAA,IACT,SAAW,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,SAAS,CAAA;AAAA,IAClC,OAAS,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,OAAO,CAAA;AAAA,IAC9B,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,WAAa,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,WAAW,CAAA;AAAA,IACtC,kBAAkB,IAAK,CAAA,YAAA;AAAA,IACvB,kBAAkB,IAAK,CAAA,YAAA;AAAA,IACvB,gBAAgB,IAAK,CAAA,eAAA;AAAA,IACrB,YAAY,IAAK,CAAA,WAAA;AAAA,IACjB,QAAQ,IAAK,CAAA,MAAA;AAAA,IACb,MAAM,IAAK,CAAA,OAAA;AAAA,GACb,CAAA;AACF,CAAA,CAAA;;;ACQO,IAAM,aAAgB,GAAA,OAC3B,OACA,EAAA,OAAA,EACA,IAC4B,KAAA;AAC5B,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,OAAU,GAAA,IAAI,OAAQ,CAAA,CAAA,QAAA,EAAW,QAAQ,EAAE,CAAA,oBAAA,CAAsB,CACpE,CAAA,aAAA,EACA,CAAA,QAAA,CAAS,OAAQ,CAAA,KAAK,EACtB,WAAY,CAAA;AAAA,IACX,aAAe,EAAA,IAAA;AAAA,GAChB,CAAA,CAAA;AAEH,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAGzB,EAAO,OAAA;AAAA,IACL,MAAQ,EAAA,QAAA,CAAS,IAAK,CAAA,KAAA,EAAO,IAAI,WAAW,CAAA;AAAA,IAC5C,SAAS,QAAS,CAAA,IAAA,CAAK,QACnB,EAAA,GAAA,CAAI,YAAY,CACjB,CAAA,MAAA;AAAA,MACC,CAAC,MACC,EACE,QAAA,CAAS,KAAK,WAAY,CAAA,mBAAA,KAAwB,KAClD,IAAA,CAAA,CAAE,MAAW,KAAA,IAAA,CAAA;AAAA,KAEnB;AAAA,IACF,QAAA,EAAU,aAAc,CAAA,QAAA,CAAS,IAAI,CAAA;AAAA,GACvC,CAAA;AACF,EAAA;;;ACnDO,IAAM,gBAAA,GAAmB,CAAC,IAAuB,KAAA;AACtD,EAAM,MAAA,CAAC,GAAK,EAAA,KAAA,EAAO,IAAI,CAAA,GAAI,KAAK,KAAM,CAAA,GAAG,CAAE,CAAA,GAAA,CAAI,MAAM,CAAA,CAAA;AACrD,EAAA,OAAO,IAAI,IAAA,CAAK,IAAM,EAAA,KAAA,GAAQ,GAAG,GAAG,CAAA,CAAA;AACtC,CAAA,CAAA;;;ACHO,IAAM,0BAAA,GAA6B,CAAC,IAAoC,KAAA;AAC7E,EAAO,OAAA;AAAA,IACL,UAAA,EAAY,KAAK,MAAO,CAAA,GAAA;AAAA,IACxB,YAAA,EAAc,gBAAiB,CAAA,IAAA,CAAK,YAAY,CAAA;AAAA,IAChD,SAAA,EAAW,gBAAiB,CAAA,IAAA,CAAK,SAAS,CAAA;AAAA,IAC1C,OAAA,EAAS,gBAAiB,CAAA,IAAA,CAAK,OAAO,CAAA;AAAA,IACtC,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,OAAA,EAAS,MAAO,CAAA,IAAA,CAAK,OAAO,CAAA;AAAA,IAC5B,WAAW,IAAK,CAAA,IAAA;AAAA,GAClB,CAAA;AACF,CAAA,CAAA;;;ACLa,IAAA,uBAAA,GAA0B,OACrC,OAAA,EACA,OACyC,KAAA;AACzC,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,CAAA,GAAA,EAAM,QAAQ,EAAE,CAAA,oCAAA,CAAA;AAAA,GAClB,CACG,eACA,CAAA,QAAA,CAAS,QAAQ,KAAK,CAAA,CACtB,WAAY,CAAA,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAA,OAAO,QAAS,CAAA,IAAA,CAAK,OAAQ,CAAA,GAAA,CAAI,0BAA0B,CAAA,CAAA;AAC7D,EAAA;ACtBO,IAAM,cAAA,GAAiB,CAAC,IAAwB,KAAA;AACrD,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,MAAM,IAAK,CAAA,aAAA;AAAA,IACX,IAAA,EAAM,KAAK,MAAO,CAAA,QAAA;AAAA,IAClB,OAASC,EAAAA,MAAAA,CAAO,IAAK,CAAA,MAAA,CAAO,OAAO,CAAA;AAAA,IACnC,WAAa,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,OAAO,OAAO,CAAA;AAAA,IACzC,WAAa,EAAA,IAAA,CAAK,MAAO,CAAA,SAAA,CAAU,IAAI,cAAc,CAAA;AAAA,GACvD,CAAA;AACF,CAAA,CAAA;AAEO,IAAM,oBAAA,GAAuB,CAAC,IAA8B,KAAA;AACjE,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,QAAA;AAAA,IACT,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,QAAQ,IAAK,CAAA,aAAA;AAAA,IACb,MAAM,IAAK,CAAA,QAAA;AAAA,IACX,WAAa,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,OAAO,CAAA;AAAA,GACpC,CAAA;AACF,CAAA,CAAA;AAUO,SAAS,kBAAA,CAAmB,MAAW,IAA0B,EAAA;AACtE,EAAO,OAAA;AAAA,IACL,IAAA;AAAA,IACA,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,OAASA,EAAAA,MAAAA,CAAO,IAAK,CAAA,eAAA,EAAiB,WAAW,EAAE,CAAA;AAAA,IACnD,aAAa,IAAK,CAAA,eAAA,EAAiB,WAAW,GAAI,CAAA,cAAc,KAAK,EAAC;AAAA,GACxE,CAAA;AACF,CAAA;;;AC7BO,IAAM,gBAAmB,GAAA,OAC9B,OACA,EAAA,OAAA,EACA,IACiE,KAAA;AACjE,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAAA,eAAA,EAAkB,IAAI,CAAA,cAAA,CAAA;AAAA,GAC7C,CACG,eACA,CAAA,QAAA,CAAS,QAAQ,KAAK,CAAA,CACtB,WAAY,CAAA,EAAE,CAAA,CAAA;AACjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AAEnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAM,MAAA,SAAA,GAAY,QAAS,CAAA,IAAA,EAAM,QAC9B,CAAA,MAAA,CAAO,CAAC,CAAA,KAAW,CAAE,CAAA,MAAM,CAC3B,CAAA,GAAA,CAAI,cAAc,CAAA,CAAA;AACrB,EAAA,MAAM,QAAW,GAAA,QAAA,CAAS,IAAM,EAAA,QAAA,CAC7B,IAAI,CAAC,IAAA,KAAc,kBAAmB,CAAA,IAAA,EAAM,IAAI,IAAA,CAAK,IAAI,CAAC,CAAC,CAC3D,CAAA,MAAA;AAAA,IACC,CAAC,OACC,KAAA,OAAA,CAAQ,YAAY,MAAS,GAAA,CAAA,IAAK,QAAQ,OAAY,KAAA,EAAA;AAAA,GAC1D,CAAA;AACF,EAAO,OAAA,EAAE,WAAW,QAAS,EAAA,CAAA;AAC/B,EAAA;AAEa,IAAA,sBAAA,GAAyB,OACpC,OAAA,EACA,OAC2D,KAAA;AAC3D,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,CAAA,QAAA,EAAW,QAAQ,EAAE,CAAA,4BAAA,CAAA;AAAA,GACvB,CACG,eACA,CAAA,QAAA,CAAS,QAAQ,KAAK,CAAA,CACtB,WAAY,CAAA,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AACzB,EAAA,OAAO,OAAO,IAAK,CAAA,QAAA,CAAS,IAAI,CAAE,CAAA,GAAA,CAAI,CAAC,IAAiB,KAAA;AACtD,IAAO,OAAA;AAAA,MACL,IAAA,EAAM,IAAI,IAAA,CAAK,IAAI,CAAA;AAAA,MACnB,WAAW,QAAS,CAAA,IAAA,CAAK,IAAI,CAAA,CAAE,IAAI,oBAAoB,CAAA;AAAA,KACzD,CAAA;AAAA,GACD,CAAA,CAAA;AACH,EAAA;AAEO,IAAM,gBAAmB,GAAA,OAC9B,OACA,EAAA,OAAA,EACA,YACA,IACkB,KAAA;AAClB,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,CAAA,QAAA,EAAW,QAAQ,EAAE,CAAA,4BAAA,CAAA;AAAA,IAEpB,aAAc,EAAA,CACd,SAAS,OAAQ,CAAA,KAAK,EACtB,WAAY,CAAA;AAAA,IACX,kBAAoB,EAAA,CAAC,IAAO,GAAA,UAAA,GAAa,IAAI,CAAA;AAAA,IAC7C,qBAAuB,EAAA,CAAC,IAAO,GAAA,IAAA,GAAO,UAAU,CAAA;AAAA,GACjD,CAAA,CAAA;AAEH,EAAM,MAAA,OAAA,CAAQ,IAAK,CAAA,OAAA,CAAQ,OAAO,CAAA,CAAA;AACpC,EAAA;;;ACnFO,IAAM,mBAAA,GAAsB,CACjC,OACoB,KAAA;AACpB,EAAO,OAAA;AAAA,IACL,IAAI,OAAQ,CAAA,EAAA;AAAA,IACZ,MAAM,OAAQ,CAAA,KAAA;AAAA,IACd,MAAM,OAAQ,CAAA,IAAA;AAAA,IACd,SAAS,OAAQ,CAAA,OAAA;AAAA,IACjB,IAAM,EAAA,IAAI,IAAK,CAAA,OAAA,CAAQ,IAAI,CAAA;AAAA,IAC3B,MAAA,EAAQ,GAAG,OAAQ,CAAA,IAAA,CAAK,MAAM,CAAI,CAAA,EAAA,OAAA,CAAQ,KAAK,GAAG,CAAA,CAAA;AAAA,IAClD,WAAW,OAAQ,CAAA,SAAA;AAAA,IACnB,SAAS,OAAQ,CAAA,OAAA;AAAA,IACjB,KAAO,EAAA,OAAA,CAAQ,KAAM,CAAA,GAAA,CAAI,CAAC,IAAU,MAAA;AAAA;AAAA,MAElC,IAAI,IAAK,CAAA,EAAA;AAAA,MACT,MAAM,IAAK,CAAA,OAAA;AAAA,MACX,MAAM,IAAK,CAAA,IAAA;AAAA;AAAA,KACX,CAAA,CAAA;AAAA,GACJ,CAAA;AACF,CAAA,CAAA;;;ACVa,IAAA,uBAAA,GAA0B,OACrC,OAAA,EACA,OACkE,KAAA;AAClE,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,CAAA,QAAA,EAAW,QAAQ,EAAE,CAAA,gCAAA,CAAA;AAAA,IAEpB,aAAc,EAAA,CACd,SAAS,OAAQ,CAAA,KAAK,EACtB,WAAY,CAAA;AAAA,IACX,aAAe,EAAA,CAAA,EAAA,iBAAQ,IAAA,IAAA,EAAQ,EAAA,WAAA,EAAa,CAAA,CAAA,EAAA,iBAAQ,IAAA,IAAA,EAAO,EAAA,WAAA,KAAgB,CAAC,CAAA,CAAA;AAAA,GAC7E,CAAA,CAAA;AAEH,EAAA,MAAM,QAAoC,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AAC5E,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAO,OAAA;AAAA,IACL,UACE,QAAS,CAAA,IAAA,CAAK,YAAY,SAC1B,IAAA,QAAA,CAAS,KAAK,WAAY,CAAA,SAAA,IAC1B,SAAS,IAAK,CAAA,WAAA,CAAY,kBAC1B,QAAS,CAAA,IAAA,CAAK,YAAY,WAC1B,IAAA,QAAA,CAAS,KAAK,WAAY,CAAA,QAAA;AAAA,IAC5B,KAAA,EAAO,QAAS,CAAA,IAAA,CAAK,QAAS,CAAA,QAAA,CAC3B,GAAI,CAAA,mBAAmB,CACvB,CAAA,IAAA,CAAK,CAAC,EAAA,EAAqB,EAAwB,KAAA;AAClD,MAAA,IAAI,EAAG,CAAA,IAAA,GAAO,EAAG,CAAA,IAAA,EAAa,OAAA,CAAA,CAAA;AAC9B,MAAA,IAAI,EAAG,CAAA,IAAA,GAAO,EAAG,CAAA,IAAA,EAAa,OAAA,CAAA,CAAA,CAAA;AAC9B,MAAO,OAAA,CAAA,CAAA;AAAA,KACR,CAAA;AAAA,GACL,CAAA;AACF,EAAA;AAEO,IAAM,WAAc,GAAA,OACzB,OACA,EAAA,OAAA,EACA,EAC6B,KAAA;AAC7B,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AACnD,EAAA,MAAM,UAAU,IAAI,OAAA;AAAA,IAClB,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAAA,UAAA,EAAa,EAAE,CAAA,gCAAA,CAAA;AAAA,GACtC,CACG,eACA,CAAA,QAAA,CAAS,QAAQ,KAAK,CAAA,CACtB,WAAY,CAAA,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAA+B,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACvE,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAO,OAAA;AAAA,IACL,EAAA,EAAI,SAAS,IAAK,CAAA,EAAA;AAAA,IAClB,IAAA,EAAM,SAAS,IAAK,CAAA,KAAA;AAAA,IACpB,IAAM,EAAA,IAAI,IAAK,CAAA,QAAA,CAAS,KAAK,IAAI,CAAA;AAAA,IACjC,IAAA,EAAM,SAAS,IAAK,CAAA,IAAA;AAAA,IACpB,SAAA,EAAW,SAAS,IAAK,CAAA,SAAA;AAAA,IACzB,OAAA,EAAS,SAAS,IAAK,CAAA,OAAA;AAAA,IACvB,OAASA,EAAAA,MAAAA,CAAO,QAAS,CAAA,IAAA,CAAK,OAAO,CAAA;AAAA,IACrC,MAAA,EAAQ,CAAG,EAAA,QAAA,CAAS,IAAK,CAAA,IAAA,CAAK,MAAM,CAAI,CAAA,EAAA,QAAA,CAAS,IAAK,CAAA,IAAA,CAAK,GAAG,CAAA,CAAA;AAAA,IAC9D,OAAO,QAAS,CAAA,IAAA,CAAK,KAAM,CAAA,GAAA,CAAI,CAAC,IAAU,MAAA;AAAA;AAAA,MAExC,IAAI,IAAK,CAAA,EAAA;AAAA,MACT,MAAM,IAAK,CAAA,OAAA;AAAA,MACX,MAAM,IAAK,CAAA,IAAA;AAAA;AAAA,KACX,CAAA,CAAA;AAAA,GACJ,CAAA;AACF,EAAA;;;AC7EO,IAAM,kBAAA,GAAqB,CAAC,IAA4B,KAAA;AAC7D,EAAO,OAAA;AAAA,IACL,OAAO,IAAK,CAAA,KAAA;AAAA,IACZ,aAAa,IAAK,CAAA,SAAA;AAAA,IAClB,SAAS,IAAK,CAAA,OAAA;AAAA,IACd,WAAW,IAAK,CAAA,SAAA;AAAA,IAChB,aAAa,IAAK,CAAA,WAAA;AAAA,IAClB,IAAM,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,IAAI,CAAA;AAAA,GAC1B,CAAA;AACF,CAAA,CAAA;;;ACFa,IAAA,eAAA,GAAkB,OAC7B,OAAA,EACA,OACiC,KAAA;AACjC,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA,CAAQ,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAAyB,uBAAA,CAAA,CAAA,CACvE,aAAc,EAAA,CACd,SAAS,OAAQ,CAAA,KAAK,CACtB,CAAA,WAAA,CAAY,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAO,OAAA,QAAA,CAAS,IAAK,CAAA,GAAA,CAAI,kBAAkB,CAAA,CAAA;AAC7C,EAAA;;;ACtBO,IAAM,mBAAA,GAAsB,CAAC,IAA6B,KAAA;AAC/D,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,OAAO,IAAK,CAAA,KAAA;AAAA,IACZ,SAAW,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,UAAU,CAAA;AAAA,IACnC,OAAS,EAAA,IAAI,IAAK,CAAA,IAAA,CAAK,QAAQ,CAAA;AAAA,IAC/B,aAAa,IAAK,CAAA,OAAA;AAAA,IAClB,kBAAkB,IAAK,CAAA,WAAA;AAAA,IACvB,MAAM,IAAK,CAAA,KAAA;AAAA,IACX,SAAS,IAAK,CAAA,IAAA;AAAA,IACd,MAAM,IAAK,CAAA,SAAA;AAAA,IACX,WAAW,IAAK,CAAA,QAAA;AAAA,IAChB,SAAS,IAAK,CAAA,SAAA;AAAA,IACd,OAAO,IAAK,CAAA,IAAA;AAAA,GACd,CAAA;AACF,CAAA,CAAA;;;ACJO,IAAM,mBAAmB,OAC9B,OAAA,EACA,OACA,EAAA,SAAA,EACA,UAAU,SACwB,KAAA;AAClC,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,OAAU,GAAA,IAAI,OAAQ,CAAA,CAAA,GAAA,EAAM,QAAQ,EAAE,CAAA,4BAAA,CAA8B,CACvE,CAAA,aAAA,EACA,CAAA,QAAA,CAAS,OAAQ,CAAA,KAAK,EACtB,WAAY,CAAA;AAAA,IACX,SAAA,EAAW,SAAU,CAAA,kBAAA,CAAmB,OAAO,CAAA;AAAA,IAC/C,OAAA,EAAS,OAAQ,CAAA,kBAAA,CAAmB,OAAO,CAAA;AAAA,IAC3C,SAAW,EAAA,KAAA;AAAA,GACZ,CAAA,CAAA;AAEH,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAA,OAAO,QAAS,CAAA,IAAA,CACb,GAAI,CAAA,mBAAmB,CACvB,CAAA,IAAA;AAAA,IACC,CAAC,IAAA,EAAqB,KACpB,KAAA,IAAI,KAAK,IAAK,CAAA,SAAS,CAAE,CAAA,OAAA,KAAY,IAAI,IAAA,CAAK,KAAM,CAAA,SAAS,EAAE,OAAQ,EAAA;AAAA,GAC3E,CAAA;AACJ,EAAA;;;ACpCa,IAAA,aAAA,GAAgB,OAC3B,OAAA,EACA,OAC4B,KAAA;AAC5B,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA,CAAQ,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAAuB,qBAAA,CAAA,CAAA,CACrE,aAAc,EAAA,CACd,SAAS,OAAQ,CAAA,KAAK,CACtB,CAAA,WAAA,CAAY,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAGzB,EAAA,OAAO,QAAS,CAAA,IAAA,CAAA;AAClB,EAAA;AChBO,IAAM,eAAA,GAAkB,CAAC,IAA6B,KAAA;AAC3D,EAAO,OAAA;AAAA,IACL,IAAI,IAAK,CAAA,EAAA;AAAA,IACT,OAAO,IAAK,CAAA,KAAA;AAAA,IACZ,aAAa,IAAK,CAAA,WAAA;AAAA,IAClB,OAAA,EAASA,MAAO,CAAA,IAAA,CAAK,MAAM,CAAA;AAAA,IAC3B,OAAO,IAAK,CAAA,KAAA;AAAA,IACZ,YAAY,IAAK,CAAA,UAAA;AAAA,IACjB,QAAQ,IAAK,CAAA,MAAA;AAAA,IACb,UAAU,IAAK,CAAA,MAAA;AAAA,IACf,QAAQ,IAAK,CAAA,MAAA;AAAA,IACb,MAAM,IAAK,CAAA,IAAA;AAAA,IACX,UAAU,IAAK,CAAA,SAAA;AAAA,IACf,SAAS,IAAK,CAAA,QAAA;AAAA,IACd,cAAc,IAAK,CAAA,aAAA;AAAA,IACnB,WAAW,IAAK,CAAA,OAAA;AAAA,IAChB,aAAa,IAAK,CAAA,gBAAA;AAAA,IAClB,WAAW,IAAK,CAAA,SAAA;AAAA,IAChB,kBAAkB,IAAK,CAAA,sBAAA;AAAA,IACvB,WAAW,IAAK,CAAA,MAAA;AAAA,GAClB,CAAA;AACF,CAAA,CAAA;;;ACfa,IAAA,gBAAA,GAAmB,OAC9B,OAAA,EACA,OACkC,KAAA;AAClC,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,IAAI,OAAA,CAAQ,CAAM,GAAA,EAAA,OAAA,CAAQ,EAAE,CAA+B,6BAAA,CAAA,CAAA,CACxE,aAAc,EAAA,CACd,SAAS,OAAQ,CAAA,KAAK,CACtB,CAAA,WAAA,CAAY,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAA,OAAO,QAAS,CAAA,IAAA,EAAM,GAAI,CAAA,eAAe,KAAK,EAAC,CAAA;AACjD,EAAA;;;ACtBO,IAAM,gBAAA,GAAmB,CAAC,WAAiC,KAAA;AAChE,EAAA,IAAI,WAAgB,KAAA,IAAA,EAAY,MAAA,IAAI,aAAc,EAAA,CAAA;AAElD,EAAO,OAAA;AAAA,IACL,MAAM,WAAY,CAAA,EAAA;AAAA,IAClB,OAAO,WAAY,CAAA,EAAA;AAAA,GACrB,CAAA;AACF,CAAA,CAAA;ACNO,IAAM,yBAAA,GAA4B,CACvC,SACwB,KAAA;AACxB,EAAO,OAAA;AAAA,IACL,QAAA,EAAUA,MAAO,CAAA,SAAA,CAAU,QAAQ,CAAA;AAAA,IACnC,OAAS,EAAA,SAAA,CAAU,YAAa,CAAA,GAAA,CAAIA,MAAM,CAAA;AAAA,GAC5C,CAAA;AACF,CAAA,CAAA;ACEa,IAAA,cAAA,GAAiB,OAC5B,OACiC,KAAA;AACjC,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,OAAU,GAAA,IAAI,OAAQ,CAAA,qCAAqC,CAC9D,CAAA,aAAA,EACA,CAAA,QAAA,CAAS,OAAQ,CAAA,KAAK,CACtB,CAAA,WAAA,CAAY,EAAE,CAAA,CAAA;AAEjB,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AAEnD,EAAA,IAAI,CAAC,QAAA,CAAS,KAAO,EAAA,MAAM,IAAI,cAAe,EAAA,CAAA;AAC9C,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAO,OAAA,yBAAA,CAA0B,SAAS,IAAI,CAAA,CAAA;AAChD,EAAA;AAEa,IAAA,eAAA,GAAkB,OAC7B,OAAA,EACA,MACqB,KAAA;AACrB,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAM,MAAA,OAAA,GAAU,IAAI,OAAA,CAAQ,sCAAsC,CAAA,CAC/D,aAAc,EAAA,CACd,QAAS,CAAA,OAAA,CAAQ,KAAK,CAAA,CACtB,WAAY,CAAA;AAAA,IACX,KAAA,EAAO,OAAO,MAAM,CAAA;AAAA,GACrB,CAAA,CAAA;AAEH,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AAEnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AACzB,EAAQ,OAAA,CAAA,WAAA,GAAc,gBAAiB,CAAA,QAAA,CAAS,IAAI,CAAA,CAAA;AAEpD,EAAO,OAAA,IAAA,CAAA;AACT,EAAA;;;AC/CO,IAAM,iBAAA,GAAoB,CAAC,IAA2B,KAAA;AAC3D,EAAA,IAAA,GAAO,OAAO,IAAI,CAAA,CAAA;AAGlB,EAAA,IAAI,CAAC,MAAO,CAAA,MAAA,CAAO,WAAW,CAAE,CAAA,QAAA,CAAS,IAAI,CAAG,EAAA;AAC9C,IAAM,MAAA,IAAI,gBAAiB,CAAA,aAAA,EAAe,IAAI,CAAA,CAAA;AAAA,GAChD;AAEA,EAAO,OAAA,IAAA,CAAA;AACT,CAAA,CAAA;;;ACRO,IAAM,aAAA,GAAgB,CAAC,OAA0B,KAAA;AACtD,EAAA,MAAM,SACJ,OAAO,OAAA,CAAQ,OAAQ,CAAA,IAAA,KAAS,eAAe,OAAQ,CAAA,OAAA,CAAQ,IAAS,KAAA,IAAA,GACpE,QAAQ,OAAQ,CAAA,IAAA,GAChB,OAAQ,CAAA,QAAA,KAAa,QACnB,GACA,GAAA,GAAA,CAAA;AAER,EAAO,OAAA;AAAA,IACL,SAAS,OAAQ,CAAA,OAAA;AAAA,IACjB,IAAI,OAAQ,CAAA,EAAA;AAAA,IACZ,QAAQ,OAAQ,CAAA,GAAA;AAAA,IAChB,UAAU,OAAQ,CAAA,WAAA;AAAA,IAClB,IAAA,EAAM,iBAAkB,CAAA,OAAA,CAAQ,UAAU,CAAA;AAAA,IAC1C,QAAQ,OAAQ,CAAA,QAAA;AAAA,IAChB,MAAM,OAAQ,CAAA,IAAA;AAAA,IACd,gBAAgB,OAAQ,CAAA,aAAA;AAAA,IACxB,WAAW,OAAQ,CAAA,MAAA;AAAA,IACnB,UAAU,OAAQ,CAAA,GAAA;AAAA,IAClB,OAAO,OAAQ,CAAA,KAAA;AAAA,IACf,KAAA,EAAO,QAAQ,OAAQ,CAAA,WAAA;AAAA,IACvB,YAAY,OAAQ,CAAA,gBAAA;AAAA,IACpB,SAAA,EAAW,QAAQ,OAAQ,CAAA,gBAAA;AAAA,IAC3B,gBAAgB,OAAQ,CAAA,iBAAA;AAAA,IACxB,mBAAmB,OAAQ,CAAA,0BAAA;AAAA,IAC3B,cAAc,OAAQ,CAAA,WAAA;AAAA,IACtB,cAAc,OAAQ,CAAA,WAAA;AAAA,IACtB,MAAA;AAAA,IACA,iBAAA,EAAmB,QAAQ,OAAQ,CAAA,KAAA;AAAA,IACnC,SAAS,OAAQ,CAAA,OAAA;AAAA,IACjB,oBAAoB,OAAQ,CAAA,qBAAA;AAAA,IAC5B,KAAO,EAAA;AAAA,MACL,KAAA,EAAO,OAAQ,CAAA,OAAA,CAAQ,MAAO,CAAA,IAAA;AAAA,MAC9B,IAAA,EAAM,OAAQ,CAAA,OAAA,CAAQ,MAAO,CAAA,OAAA;AAAA,KAC/B;AAAA,GACF,CAAA;AACF,CAAA,CAAA;;;ACrCO,IAAM,gBAAA,GAAmB,CAC9B,WACQ,KAAA;AACR,EAAA,OAAO,WACH,GAAA;AAAA,IACA,IAAI,WAAY,CAAA,IAAA;AAAA,IAChB,IAAI,WAAY,CAAA,KAAA;AAAA,GAEhB,GAAA,KAAA,CAAA,CAAA;AACN,CAAA,CAAA;ACIA,IAAM,IAAO,GAAA,OACX,IACA,EAAA,KAAA,GAAuB,IACF,KAAA;AACrB,EAAI,IAAA,GAAA,CAAA;AACJ,EAAI,IAAA,OAAA,CAAA;AAEJ,EAAA;AACE,IAAA,MAAMC,QAAU,GAAA,IAAI,OAAQ,CAAA,kBAAkB,EAAE,aAAc,EAAA,CAAA;AAC9D,IAAM,MAAA,QAAA,GAAW,MAAMA,QAAAA,CAAQ,OAAQ,EAAA,CAAA;AACvC,IAAA,OAAA,GAAU,uBAAuB,QAAQ,CAAA,CAAA;AAEzC,IAAA,KAAA,MAAW,UAAU,OAAS,EAAA;AAC5B,MAAA,MAAM,CAAC,GAAK,EAAA,KAAK,CAAI,GAAA,MAAA,CAAO,MAAM,GAAG,CAAA,CAAA;AACrC,MAAI,IAAA,GAAA,KAAQ,OAAa,GAAA,GAAA,KAAA,CAAA;AAAA,KAC3B;AAEA,IAAA,IAAI,CAAC,GAAK,EAAA;AACR,MAAM,MAAA,IAAI,MAAM,kCAAkC,CAAA,CAAA;AAAA,KACpD;AAAA,GACF;AAEA,EAAM,MAAA,OAAA,GAAU,IAAI,OAAQ,CAAA,YAAY,EAAE,aAAc,EAAA,CAAE,YAAY,IAAI,CAAA,CAAA;AAC1E,EAAQ,OAAA,CAAA,OAAA,CAAQ,OAAO,CAAI,GAAA,GAAA,CAAA;AAC3B,EAAA,OAAA,CAAQ,OAAQ,CAAA,QAAQ,CAAI,GAAA,OAAA,CAAQ,KAAK,IAAI,CAAA,CAAA;AAE7C,EAAI,IAAA,KAAA,EAAe,OAAA,CAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AACjC,EAAO,OAAA,OAAA,CAAA;AACT,CAAA,CAAA;AAEa,IAAA,KAAA,GAAQ,OACnB,OAAA,EACA,QAC4B,KAAA;AAC5B,EAAM,MAAA,mBAAA,GAAsB,gBAAiB,CAAA,OAAA,CAAQ,WAAW,CAAA,CAAA;AAChE,EAAA,MAAM,UAAU,MAAM,IAAA;AAAA,IACpB;AAAA,MACE,GAAG,mBAAA;AAAA,MACH,EAAA,EAAI,mBAAuB,IAAA,CAAC,mBAAmB,CAAA;AAAA,MAE/C,aAAa,OAAQ,CAAA,QAAA;AAAA,MACrB,MAAM,OAAQ,CAAA,WAAA;AAAA,MACd,SAAW,EAAA,KAAA;AAAA,MACX,eAAiB,EAAA,IAAA;AAAA,MACjB,UAAA,EAAY,mBAAmB,QAAQ,CAAA;AAAA,KACzC;AAAA,IACA,OAAQ,CAAA,KAAA;AAAA,GACV,CAAA;AAEA,EAAO,OAAA,IAAA,CAAK,SAAS,OAAO,CAAA,CAAA;AAC9B,EAAA;AAEa,IAAA,OAAA,GAAU,OACrB,OAAA,EACA,YAC4B,KAAA;AAC5B,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,MAAM,IAAI,oBAAqB,EAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,MAAM,IAAA;AAAA,IACpB;AAAA,MACE,EAAI,EAAA,CAAC,gBAAiB,CAAA,OAAA,CAAQ,WAAW,CAAC,CAAA;AAAA,MAE1C,aAAa,OAAQ,CAAA,QAAA;AAAA,MACrB,MAAM,OAAQ,CAAA,WAAA;AAAA,MACd,SAAW,EAAA,IAAA;AAAA,MACX,UAAY,EAAA,KAAA;AAAA,MACZ,UAAY,EAAA,YAAA;AAAA,MACZ,aAAa,OAAQ,CAAA,WAAA;AAAA,KACvB;AAAA,IACA,OAAQ,CAAA,KAAA;AAAA,GACV,CAAA;AAEA,EAAO,OAAA,IAAA,CAAK,SAAS,OAAO,CAAA,CAAA;AAC9B,EAAA;AAEA,IAAM,IAAA,GAAO,OACX,OAAA,EACA,OAC4B,KAAA;AAC5B,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,IAAA,CAAK,QAAQ,OAAO,CAAA,CAAA;AACnD,EAAA,OAAA,CAAQ,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEzB,EAAA,QAAQ,SAAS,MAAQ;AAAA,IACvB,KAAK,GAAA;AACH,MAAA,MAAM,IAAI,cAAe,EAAA,CAAA;AAAA,IAC3B,KAAK,GAAA;AACH,MAAA,MAAM,IAAI,cAAe,EAAA,CAAA;AAAA,IAC3B,KAAK,GAAA;AACH,MAAA,MAAM,IAAI,kBAAmB,EAAA,CAAA;AAAA,GACjC;AAEA,EAAA,OAAO,QAAS,CAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,aAAa,CAAA,CAAA;AACjD,CAAA,CAAA;AAEa,IAAA,cAAA,GAAiB,CAAC,OAAA,EAAkB,OAAqB,KAAA;AACpE,EAAA,OAAA,CAAQ,cAAc,OAAQ,CAAA,YAAA,CAAA;AAChC","file":"index.mjs","sourcesContent":["import {\n  type Response as UnsafeResponse,\n  getHeaderFromResponse\n} from \"@literate.ink/utilities\";\n\nconst validJson = (value: string) => {\n  return (\n    (value.startsWith(\"[\") || value.startsWith(\"{\")) &&\n    (value.endsWith(\"]\") || value.endsWith(\"}\"))\n  );\n};\n\nexport class Response {\n  public status: number;\n  public token: string | null;\n  public access_token: string | null = null;\n  public message: string | null = null;\n  public data: any;\n\n  public constructor(response: UnsafeResponse) {\n    this.token = getHeaderFromResponse(response, \"x-token\");\n\n    const content_type = getHeaderFromResponse(response, \"content-type\");\n    // Set error if response is not JSON and don't starts like JSON. ED sometimes return JSON in a text/html Content-Type (yes....)\n    if (\n      !content_type?.startsWith(\"application/json\") &&\n      !validJson(response.content)\n    ) {\n      this.status = Number.parseInt(\n        getHeaderFromResponse(response, \"x-code\")!,\n        10\n      );\n    }\n    else {\n      const content = JSON.parse(response.content);\n\n      this.status = content.code;\n      this.data = content.data;\n      this.message = content.message;\n\n      if (\"token\" in content) {\n        this.token = content.token;\n      }\n    }\n  }\n}\n","import {\n  type Fetcher,\n  type Request as UnsafeRequest,\n  defaultFetcher\n} from \"@literate.ink/utilities\";\nimport { Response } from \"./response\";\n\nexport class Request {\n  public url: URL;\n  public headers: Record<string, string>;\n  public method: string | undefined;\n  public content: string | undefined;\n\n  public constructor(path: string) {\n    this.url = new URL(`https://api.ecoledirecte.com/v3${path}`);\n    this.headers = { \"User-Agent\": \"Android EDMOBILE v7.0.1\" };\n  }\n\n  public setToken(token: string): Request {\n    this.headers[\"X-Token\"] = token;\n    return this;\n  }\n\n  public addVersionURL(): Request {\n    this.url.searchParams.set(\"v\", \"7.0.1\");\n    return this;\n  }\n\n  public setFormData(body: any): Request {\n    this.method = \"POST\";\n    this.content = `data=${JSON.stringify(body)}`;\n    this.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    return this;\n  }\n\n  public async send(fetcher: Fetcher = defaultFetcher): Promise<Response> {\n    const response = await fetcher(this as UnsafeRequest);\n    return new Response(response);\n  }\n\n  public async sendRaw(fetcher: Fetcher = defaultFetcher) {\n    return await fetcher(this as UnsafeRequest);\n  }\n}\n","export class BadCredentials extends Error {\n  public constructor() {\n    super(\"Bad credentials, no token found in response\");\n    this.name = \"BadCredentials\";\n  }\n}\n","export class BadDoubleAuth extends Error {\n  public constructor() {\n    super(\"Bad double auth response\");\n    this.name = \"BadDoubleAuth\";\n  }\n}\n","export class DoubleAuthRequired extends Error {\n  public constructor() {\n    super(\"Double authentication required\");\n    this.name = \"DoubleAuthRequired\";\n  }\n}\n","export class InvalidVersion extends Error {\n  public constructor() {\n    super(\n      \"Invalid version, please open an issue at the 'LiterateInk/Pawdirecte' GitHub repository.\"\n    );\n    this.name = \"InvalidVersion\";\n  }\n}\n","export class SessionTokenRequired extends Error {\n  public constructor() {\n    super(\"Session token is required to do this action\");\n    this.name = \"SessionTokenRequired\";\n  }\n}\n","export class UnknownEnumValue extends Error {\n  public constructor(label: string, value: string) {\n    super(`Expected a value from the enum '${label}', but got '${value}'`);\n    this.name = \"UnknownEnumValue\";\n  }\n}\n","export const AccountKind = {\n  Student: \"E\"\n  // Family1: \"1\",\n  // Family2: \"2\"\n  // Staff: \"A\",\n  // Teacher: \"P\"\n} as const;\n\nexport type AccountKind = typeof AccountKind[keyof typeof AccountKind];\n","export const AttendanceItemKind = {\n  PUNITION: \"Punition\",\n  RETARD: \"Retard\",\n  ABSENCE: \"Absence\",\n  DISPENSE: \"Dispense\"\n} as const;\n\nexport type AttendanceItemKind =\n  (typeof AttendanceItemKind)[keyof typeof AttendanceItemKind];\n","export const ReservationWeekdays = {\n  monday: \"monday\",\n  tuesday: \"tuesday\",\n  wednesay: \"wednesday\",\n  thursday: \"thursday\",\n  friday: \"friday\",\n  saturday: \"saturday\",\n  sunday: \"sunday\"\n};\n\nexport const ReservationMeals = {\n  breakfast: \"breakfast\",\n  lunch: \"lunch\",\n  diner: \"diner\"\n};\n\nexport type CantineReservations = Readonly<{\n  badge: number;\n  /**\n   * @example \"Externe\"\n   */\n  diet: string;\n  meals: {\n    [key in keyof typeof ReservationWeekdays]: {\n      [key in keyof typeof ReservationMeals]: boolean;\n    };\n  };\n}>;\n\nexport type CantineBarcode = Readonly<{\n  badgeNumber: number;\n}>;\n","export const DocumentKind = {\n  Grades: \"Note\",\n  Document: \"Doc\",\n  SchoolLife: \"Viesco\", // TODO, not sure\n  Invoice: \"Fac\", // TODO, not sure\n  Registration: \"Inscr\", // TODO, not sure\n  Textbook: \"FICHIER_CDT\",\n  Other: \"\"\n} as const;\n\nexport type DocumentKind = (typeof DocumentKind)[keyof typeof DocumentKind];\n","export enum FileKind {\n  Cloud = \"CLOUD\",\n  Homework = \"FICHIER_CDT\",\n  Attachement = \"PIECE_JOINTE\",\n  CantineMenu = \"FICHIER_MENU_RESTAURATION\",\n  Administrative = \"ADMINISTRATIF\",\n  Other = \"\"\n}\n","export const GradeKind = {\n  Error: -1,\n  Grade: 0,\n  Absent: 1,\n  Exempted: 2,\n  NotGraded: 3,\n  Waiting: 4\n} as const;\n// Stolen from pawnote\n\nexport type GradeKind = (typeof GradeKind)[keyof typeof GradeKind];\n","export const TimelineItemKind = {\n  Note: \"Note\",\n  VieScolaire: \"VieScolaire\",\n  ReunionPP: \"ReunionPP\",\n  ReunionPPFamille: \"ReunionPPFamille\",\n  Actualite: \"Actualite\",\n  Messagerie: \"Messagerie\",\n  DocumentFamille: \"DocumentFamille\",\n  Document: \"Document\"\n} as const;\n\nexport type TimelineItemKind =\n  (typeof TimelineItemKind)[keyof typeof TimelineItemKind];\n","export const TimetableItemKind = {\n  COURS: \"COURS\",\n  PERMANENCE: \"PERMANENCE\",\n  CONGE: \"CONGE\",\n  EVENEMENT: \"EVENEMENT\",\n  SANCTION: \"SANCTION\"\n} as const;\n\nexport type TimetableItemKind =\n  (typeof TimetableItemKind)[keyof typeof TimetableItemKind];\n","export const WorkspaceItemKind = {\n  LIBRE: \"LIBRE\"\n  //OTHER ?\n} as const;\n\nexport type WorkspaceItemKind =\n  (typeof WorkspaceItemKind)[keyof typeof WorkspaceItemKind];\n","import { Request } from \"~/core/request\";\nimport { type Account, type Session, SessionTokenRequired } from \"~/models\";\n\nexport const accountEdforms = async (\n  session: Session,\n  account: Account\n): Promise<Array<unknown>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\"/edforms.awp?verbe=list\")\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({\n      idEntity: account.id,\n      typeEntity: account.kind\n    });\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  // TODO: a decoder for this, when we know what does it return.\n  return response.data;\n};\n","import type { AttendanceItem } from \"~/models\";\n\nexport const decodeAttendanceItem = (item: any): AttendanceItem => {\n  return {\n    id: item.id,\n    studentId: item.idEleve,\n    studentName: item.nomEleve,\n    reason: item.motif,\n    date: new Date(item.date),\n    dateOfEvent: new Date(item.dateDeroulement),\n    label: item.libelle,\n    teacher: item.par,\n    comment: item.commentaire,\n    justified: item.justifie,\n    justificationType: item.typeJustification,\n    onlineJustification: item.justifieEd,\n    subjectName: item.matiere,\n    todo: item.aFaire,\n    kind: item.typeElement,\n    displayDate:\n      item.displayDate !== \"\"\n        ? item.displayDate\n        : item.dateDeroulement\n          .toLowerCase()\n          .replace(\"<br>\", \" \")\n          .replace(\"déroulement prévu \", \"\")\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeAttendanceItem } from \"~/decoders/attendance-item\";\nimport {\n  type Account,\n  type AttendanceItem,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\n\ntype AttendanceResponse = Readonly<{\n  punishments: Array<AttendanceItem>;\n  absences: Array<AttendanceItem>;\n  exemptions: Array<AttendanceItem>;\n}>;\n\nexport const studentAttendance = async (\n  session: Session,\n  account: Account\n): Promise<AttendanceResponse> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(`/eleves/${account.id}/viescolaire.awp?verbe=get`)\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  const punishments = response.data.sanctionsEncouragements;\n  const absences = response.data.absencesRetards;\n  const exemptions = response.data.dispenses;\n\n  return {\n    punishments: punishments.map(decodeAttendanceItem),\n    absences: absences.map(decodeAttendanceItem),\n    exemptions: exemptions.map(decodeAttendanceItem)\n  };\n};\n","import {\n  type CantineBarcode,\n  type CantineReservations,\n  ReservationMeals,\n  ReservationWeekdays\n} from \"~/models\";\n\nexport const decodeReservation = (item: any): CantineReservations => {\n  const meals: CantineReservations[\"meals\"] = {\n    monday: {\n      breakfast: false,\n      lunch: item.params.repasmidi_1 === \"1\",\n      diner: item.params.repassoir_1 === \"1\"\n    },\n    tuesday: {\n      breakfast: false,\n      lunch: item.params.repasmidi_2 === \"1\",\n      diner: item.params.repassoir_2 === \"1\"\n    },\n    wednesay: {\n      breakfast: false,\n      lunch: item.params.repasmidi_3 === \"1\",\n      diner: item.params.repassoir_3 === \"1\"\n    },\n    thursday: {\n      breakfast: false,\n      lunch: item.params.repasmidi_4 === \"1\",\n      diner: item.params.repassoir_4 === \"1\"\n    },\n    friday: {\n      breakfast: false,\n      lunch: item.params.repasmidi_5 === \"1\",\n      diner: item.params.repassoir_5 === \"1\"\n    },\n    saturday: {\n      breakfast: false,\n      lunch: item.params.repasmidi_6 === \"1\",\n      diner: item.params.repassoir_6 === \"1\"\n    },\n    sunday: {\n      breakfast: false,\n      lunch: item.params.repasmidi_7 === \"1\",\n      diner: item.params.repassoir_7 === \"1\"\n    }\n  };\n  return {\n    badge: item.badge,\n    diet: item.params.regime,\n    meals\n  };\n};\n\nexport const decodeBarcode = (item: any): CantineBarcode => {\n  return {\n    badgeNumber: item.params.numeroBadge\n  };\n};\n","import { decodeBarcode, decodeReservation } from \"~/decoders/cantine\";\nimport type { Account, CantineBarcode, CantineReservations } from \"~/models\";\n\ntype CantineResponse = Readonly<{\n  reservation?: CantineReservations;\n  barcode?: CantineBarcode;\n}>;\n\n/**\n * Returns the modules \"RESERVATIONS\" and \"CANTINE_BARCODE\"\n */\nexport const studentCantine = async (\n  account: Account\n): Promise<CantineResponse> => {\n  const reservations = account.modules.find(\n    (m: any) => m.code === \"RESERVATIONS\"\n  );\n  const barcode = account.modules.find(\n    (m: any) => m.code === \"CANTINE_BARCODE\"\n  );\n\n  return {\n    reservation: reservations.enable ?? decodeReservation(reservations),\n    barcode: barcode.enable ?? decodeBarcode(barcode)\n  };\n};\n","import type { DocumentKind } from \"~/models\";\n\nexport const decodeDocumentKind = (kind: any): DocumentKind => {\n  return kind as DocumentKind;\n};\n","import type { Document } from \"~/models\";\nimport { decodeDocumentKind } from \"./document-kind\";\n\nexport const decodeDocument = (item: any): Document => {\n  return {\n    id: item.id,\n    name: item.libelle,\n    date: new Date(item.date),\n    kind: decodeDocumentKind(item.type),\n    signatureRequired: item.signatureDemandee ?? false,\n    signature: item.signature ?? void 0\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeDocument } from \"~/decoders/document\";\nimport { type Document, type Session, SessionTokenRequired } from \"~/models\";\n\n/**\n * @param archive \"The year of document, if it's an archive; YYYY format.\"\n */\nexport const studentDocuments = async (\n  session: Session,\n  archive = \"\"\n): Promise<Document[]> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\n    `/elevesDocuments.awp?verbe=get&archive=${archive}`\n  )\n    .addVersionURL()\n    .setFormData({ forceDownload: 0 })\n    .setToken(session.token);\n\n  const response = await request.send(session.fetcher);\n  const allDocuments = [\n    ...response.data.factures,\n    ...response.data.notes,\n    ...response.data.viescolaire,\n    ...response.data.administratifs,\n    ...response.data.inscriptions\n  ];\n  return allDocuments.map(decodeDocument);\n};\n","import type { Response } from \"@literate.ink/utilities\";\nimport { Request } from \"~/core/request\";\nimport { FileKind, type Session, SessionTokenRequired } from \"~/models\";\n\nexport const buildPawdirecteFileDownloadUrl = (\n  type: FileKind,\n  id: number | string,\n  year = \"\"\n) => {\n  const endpoint = `/telechargement.awp?verbe=get&fichierId=${id}`;\n  let url;\n  switch (type) {\n    case FileKind.Administrative:\n      url = endpoint + year !== \"\" ? `archive=true&anneeArchive=${year}` : \"\";\n      break;\n    case FileKind.Attachement:\n      url = endpoint + year !== \"\" ? `anneeMessages=${year}` : \"\";\n      break;\n    default:\n      url = `${endpoint}&leTypeDeFichier=${type}`;\n  }\n  return url;\n};\n\n/**\n * @param type \"The type of file to download\"\n * @param id \"The file ID or UNC path\"\n * @param year \"The year of document; YYYY format.\" ONLY AVAILABLE FOR ADMINISTRATIVE AND MESSAGES ATTACHEMENTS FILES\n */\nexport const getFile = async (\n  session: Session,\n  type: FileKind,\n  id: number | string,\n  year = \"\"\n): Promise<Response> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const url = buildPawdirecteFileDownloadUrl(type, id, year);\n  const request = new Request(url)\n    .addVersionURL()\n    .setFormData({ forceDownload: 0 })\n    .setToken(session.token);\n\n  return request.sendRaw(session.fetcher);\n};\n","import { GradeKind, type GradeValue } from \"~/models\";\n\nexport const decodeGradeValue = (value: string): GradeValue => {\n  if (!value)\n    return {\n      kind: GradeKind.Error,\n      points: 0\n    };\n\n  switch (value.trim()) {\n    case \"Disp\":\n      return {\n        kind: GradeKind.Exempted,\n        points: 0\n      };\n    case \"Abs\":\n      return {\n        kind: GradeKind.Absent,\n        points: 0\n      };\n    case \"NE\": // \"Non évalué\"\n      return {\n        kind: GradeKind.NotGraded,\n        points: 0\n      };\n    case \"EA\": // En attente\n      return {\n        kind: GradeKind.Waiting,\n        points: 0\n      };\n    default:\n      try {\n        return {\n          kind: GradeKind.Grade,\n          points: Number(value.replaceAll(\",\", \".\"))\n        };\n      }\n      catch {\n        return {\n          kind: GradeKind.Error,\n          points: 0\n        };\n      }\n  }\n};\n","import type { Skill } from \"~/models\";\n\nexport const decodeSkill = (item: any): Skill => {\n  return {\n    id: item.idCompetence,\n    name: item.libelleCompetence,\n    description: item.descriptif,\n    value: Number(item.valeur)\n  };\n};\n","import { decodeGradeValue } from \"~/decoders/grade-value\";\nimport { decodeSkill } from \"~/decoders/skill\";\nimport type { Grade } from \"~/models\";\n\nexport const decodeGrade = (item: any): Grade => {\n  return {\n    comment: item.devoir,\n    average: decodeGradeValue(item.moyenneClasse),\n    isOptional: item.valeurisee,\n    skills: item.elementsProgramme.map(decodeSkill),\n    coefficient: Number(item.coef),\n    date: new Date(item.date),\n    examType: item.typeDevoir,\n    max: decodeGradeValue(item.maxClasse),\n    min: decodeGradeValue(item.minClasse),\n    outOf: item.noteSur.replaceAll(\",\", \".\"),\n    period: {\n      id: item.codePeriode,\n      // TODO: fill name\n      name: \"\"\n    },\n    subject: {\n      id: item.codeMatiere,\n      subSubjectId: item.codeSousMatiere,\n      name: item.libelleMatiere\n    },\n    subjectFilePath: item.uncSujet,\n    correctionFilePath: item.uncCorrige,\n    value: decodeGradeValue(item.valeur)\n  };\n};\n","import type { GradesOverview } from \"~/models\";\nimport { decodeGradeValue } from \"./grade-value\";\n\nexport const buildOverview = (data: any): GradesOverview => {\n  const overview: GradesOverview = {};\n  const outOf = data.parametrage.moyenneSur || 20;\n  const showStudentAverage = data.parametrage.moyenneGenerale;\n  const showYearlyPeriod = data.parametrage.notePeriodeAnnuelle;\n\n  for (const period of data.periodes) {\n    if (!(showYearlyPeriod === false && period.yearly === true)) {\n      const subjects = period.ensembleMatieres.disciplines;\n      overview[period.idPeriode] = {\n        classAverage: decodeGradeValue(period.ensembleMatieres.moyenneClasse),\n        overallAverage: showStudentAverage\n          ? decodeGradeValue(period.ensembleMatieres.moyenneGenerale)\n          : getOverallAverageFromClassAverage(period),\n        subjects: []\n      };\n      for (const subject of subjects) {\n        overview[period.idPeriode].subjects.push({\n          name: subject.discipline,\n          id: subject.codeMatiere,\n          childSubjectId: subject.codeSousMatiere,\n          isChildSubject: subject.sousMatiere,\n          // TODO\n          color: \"string\",\n          coefficient: Number(subject.coef),\n          classAverage: decodeGradeValue(\n            subject.moyenneClasse?.replace(\",\", \".\")\n          ),\n          maxAverage: decodeGradeValue(subject.moyenneMax?.replace(\",\", \".\")),\n          minAverage: decodeGradeValue(subject.moyenneMin?.replace(\",\", \".\")),\n          studentAverage: decodeGradeValue(subject.moyenne?.replace(\",\", \".\")),\n          outOf: decodeGradeValue(outOf.toString())\n        });\n      }\n    }\n  }\n  return overview;\n};\n\nfunction getOverallAverageFromClassAverage(period: any) {\n  let count = 0;\n  let sum = 0;\n\n  const subjects = period.ensembleMatieres.disciplines;\n\n  for (const subject of subjects) {\n    if (subject.moyenne !== \"\") {\n      const grade = decodeGradeValue(subject.moyenne?.replace(\",\", \".\")).points;\n      const coef = subject.coef === 0 ? 1 : subject.coef;\n      count += coef;\n      sum += grade * coef;\n    }\n  }\n\n  return decodeGradeValue((sum / count).toString());\n}\n","import type { Period } from \"~/models\";\n\nexport const decodePeriod = (item: any): Period => {\n  return {\n    id: item.idPeriode,\n    startDate: new Date(item.dateDebut),\n    endDate: new Date(item.dateFin),\n    isEnded: item.cloture,\n    councilDate: new Date(item.dateConseil),\n    councilClassroom: item.salleConseil,\n    councilStartHour: item.heureConseil,\n    councilEndHour: item.heureFinConseil,\n    isMockExam: item.examenBlanc,\n    yearly: item.annuel,\n    name: item.periode\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeGrade } from \"~/decoders/grade\";\nimport { buildOverview } from \"~/decoders/grades-overview\";\nimport { decodePeriod } from \"~/decoders/period\";\nimport {\n  type Account,\n  type Grade,\n  type GradesOverview,\n  type Period,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\n\ntype GradesResponse = {\n  grades: Array<Grade>;\n  periods: Array<Period>;\n  overview: GradesOverview;\n};\n\n/**\n * @param session\n * @param account\n * @param year \"The year to fetch grades in YYYY format.\" SENSITIVE PARAMETER NOT ALL ACCOUNTS CAN DO THAT\n */\nexport const studentGrades = async (\n  session: Session,\n  account: Account,\n  year: string\n): Promise<GradesResponse> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(`/eleves/${account.id}/notes.awp?verbe=get`)\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({\n      anneeScolaire: year\n    });\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  // TODO: return parameters like colors ect...\n  return {\n    grades: response.data.notes?.map(decodeGrade),\n    periods: response.data.periodes\n      ?.map(decodePeriod)\n      .filter(\n        (i: any) =>\n          !(\n            response.data.parametrage.notePeriodeAnnuelle === false &&\n            i.yearly === true\n          )\n      ),\n    overview: buildOverview(response.data)\n  };\n};\n","/**\n * @param date french date string as \"dd/mm/yyyy\"\n * @returns Date object\n */\nexport const decodeFrenchDate = (date: string): Date => {\n  const [day, month, year] = date.split(\"/\").map(Number);\n  return new Date(year, month - 1, day);\n};\n","import { decode } from \"js-base64\";\nimport type { HomepageTimelineItem } from \"~/models\";\nimport { decodeFrenchDate } from \"./dates\";\n\nexport const decodeHomepageTimelineItem = (item: any): HomepageTimelineItem => {\n  return {\n    authorName: item.auteur.nom,\n    creationDate: decodeFrenchDate(item.dateCreation),\n    startDate: decodeFrenchDate(item.dateDebut),\n    endDate: decodeFrenchDate(item.dateFin),\n    id: item.id,\n    content: decode(item.contenu),\n    colorName: item.type\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeHomepageTimelineItem } from \"~/decoders/homepage-timeline-item\";\nimport {\n  type Account,\n  type HomepageTimelineItem,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\n\nexport const studentHomepageTimeline = async (\n  session: Session,\n  account: Account\n): Promise<Array<HomepageTimelineItem>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\n    `/E/${account.id}/timelineAccueilCommun.awp?verbe=get`\n  )\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  return response.data.postits.map(decodeHomepageTimelineItem);\n};\n","import { decode } from \"js-base64\";\nimport type { ClassSubject, ComingHomework, Homework } from \"~/models\";\nimport { decodeDocument } from \"./document\";\n\nexport const decodeHomework = (item: any): Homework => {\n  return {\n    id: item.id,\n    subject: item.matiere,\n    teacher: item.nomProf,\n    exam: item.interrogation,\n    done: item.aFaire.effectue,\n    content: decode(item.aFaire.contenu),\n    createdDate: new Date(item.aFaire.donneLe),\n    attachments: item.aFaire.documents.map(decodeDocument)\n  };\n};\n\nexport const decodeComingHomework = (item: any): ComingHomework => {\n  return {\n    id: item.idDevoir,\n    subject: item.matiere,\n    isExam: item.interrogation,\n    done: item.effectue,\n    createdDate: new Date(item.donneLe)\n  };\n};\n\n/**\n *\n * @param matiere\n * @returns\n *\n * Feed les matières contenant les devoirs également, return les contenus de séances.\n */\n\nexport function decodeClassSubject(item: any, date: Date): ClassSubject {\n  return {\n    date,\n    id: item.id,\n    subject: item.matiere,\n    teacher: item.nomProf,\n    content: decode(item.contenuDeSeance?.contenu ?? \"\"),\n    attachments: item.contenuDeSeance?.documents?.map(decodeDocument) ?? []\n  };\n}\n","import { Request } from \"~/core/request\";\nimport {\n  decodeClassSubject,\n  decodeComingHomework,\n  decodeHomework\n} from \"~/decoders/homework\";\nimport {\n  type Account,\n  type ClassSubject,\n  type ComingHomework,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\nimport type { Homework } from \"~/models\";\n\nexport const studentHomeworks = async (\n  session: Session,\n  account: Account,\n  date: string\n): Promise<{ homeworks: Homework[]; subjects: ClassSubject[] }> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\n    `/Eleves/${account.id}/cahierdetexte/${date}.awp?verbe=get`\n  )\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n  const response = await request.send(session.fetcher);\n\n  session.token = response.token;\n\n  const homeworks = response.data?.matieres\n    .filter((h: any) => h.aFaire)\n    .map(decodeHomework);\n  const subjects = response.data?.matieres\n    .map((item: any) => decodeClassSubject(item, new Date(date)))\n    .filter(\n      (subject: ClassSubject) =>\n        subject.attachments.length > 0 || subject.content !== \"\"\n    );\n  return { homeworks, subjects };\n};\n\nexport const studentComingHomeworks = async (\n  session: Session,\n  account: Account\n): Promise<{ date: Date; homeworks: ComingHomework[] }[]> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\n    `/Eleves/${account.id}/cahierdetexte.awp?verbe=get`\n  )\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n  return Object.keys(response.data).map((date: string) => {\n    return {\n      date: new Date(date),\n      homeworks: response.data[date].map(decodeComingHomework)\n    };\n  });\n};\n\nexport const setHomeworkState = async (\n  session: Session,\n  account: Account,\n  homeworkId: number,\n  done: boolean\n): Promise<void> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\n    `/Eleves/${account.id}/cahierdetexte.awp?verbe=put`\n  )\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({\n      idDevoirsEffectues: [done ? homeworkId : null],\n      idDevoirsNonEffectues: [done ? null : homeworkId]\n    });\n\n  await request.send(session.fetcher);\n};\n","import type { FileKind } from \"~/models\";\nimport type { APIReceivedMessageType, ReceivedMessage } from \"~/models/message\";\n\nexport const decodeMesssagesList = (\n  message: APIReceivedMessageType\n): ReceivedMessage => {\n  return {\n    id: message.id,\n    type: message.mtype,\n    read: message.read,\n    subject: message.subject,\n    date: new Date(message.date),\n    sender: `${message.from.prenom} ${message.from.nom}`,\n    canAnswer: message.canAnswer,\n    content: message.content,\n    files: message.files.map((file) => ({\n      // to download attachement GET /telechargement.awp?leTypeDeFichier={type}&fichierId={id}\n      id: file.id,\n      name: file.libelle,\n      type: file.type as FileKind // file.type is always a FileKind type... a decoder would be overkill\n    }))\n  };\n};\n","import { decode } from \"js-base64\";\nimport { Request } from \"~/core/request\";\nimport { decodeMesssagesList } from \"~/decoders/messages-list\";\nimport {\n  type Account,\n  type FileKind,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\nimport type { APIReceivedMessage, ReceivedMessage } from \"~/models/message\";\nimport type { APIReceivedMessagesList } from \"~/models/messages-list\";\n\nexport const studentReceivedMessages = async (\n  session: Session,\n  account: Account\n): Promise<{ chats: Array<ReceivedMessage>; canReply: boolean }> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\n    `/eleves/${account.id}/messages.awp?verbe=get&getAll=1`\n  )\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({\n      anneeMessages: `${(new Date()).getFullYear()}-${new Date().getFullYear() + 1}`\n    });\n\n  const response: APIReceivedMessagesList = await request.send(session.fetcher);\n  session.token = response.token;\n\n  return {\n    canReply:\n      response.data.parametrage.destAdmin ||\n      response.data.parametrage.destEleve ||\n      response.data.parametrage.destEspTravail ||\n      response.data.parametrage.destFamille ||\n      response.data.parametrage.destProf,\n    chats: response.data.messages.received\n      .map(decodeMesssagesList)\n      .sort((m1: ReceivedMessage, m2: ReceivedMessage) => {\n        if (m1.date < m2.date) return 1;\n        if (m1.date > m2.date) return -1;\n        return 0;\n      })\n  };\n};\n\nexport const readMessage = async (\n  session: Session,\n  account: Account,\n  id: number\n): Promise<ReceivedMessage> => {\n  if (!session.token) throw new SessionTokenRequired();\n  const request = new Request(\n    `/eleves/${account.id}/messages/${id}.awp?verbe=get&mode=destinataire`\n  )\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response: APIReceivedMessage = await request.send(session.fetcher);\n  session.token = response.token;\n\n  return {\n    id: response.data.id,\n    type: response.data.mtype,\n    date: new Date(response.data.date),\n    read: response.data.read,\n    canAnswer: response.data.canAnswer,\n    subject: response.data.subject,\n    content: decode(response.data.content),\n    sender: `${response.data.from.prenom} ${response.data.from.nom}`,\n    files: response.data.files.map((file) => ({\n      // to download attachement GET /telechargement.awp?leTypeDeFichier={type}&fichierId={id}\n      id: file.id,\n      name: file.libelle,\n      type: file.type as FileKind // file.type is always a FileKind type... a decoder would be overkill\n    }))\n  };\n};\n","import type { TimelineItem } from \"~/models\";\n\nexport const decodeTimelineItem = (item: any): TimelineItem => {\n  return {\n    title: item.titre,\n    description: item.soustitre,\n    content: item.contenu,\n    elementID: item.idElement,\n    elementKind: item.typeElement,\n    date: new Date(item.date)\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeTimelineItem } from \"~/decoders/timeline-item\";\nimport {\n  type Account,\n  type Session,\n  SessionTokenRequired,\n  type TimelineItem\n} from \"~/models\";\n\nexport const studentTimeline = async (\n  session: Session,\n  account: Account\n): Promise<Array<TimelineItem>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(`/eleves/${account.id}/timeline.awp?verbe=get`)\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  return response.data.map(decodeTimelineItem);\n};\n","import type { TimetableItem } from \"~/models\";\n\nexport const decodeTimetableItem = (item: any): TimetableItem => {\n  return {\n    id: item.id,\n    color: item.color,\n    startDate: new Date(item.start_date),\n    endDate: new Date(item.end_date),\n    subjectName: item.matiere,\n    subjectShortName: item.codeMatiere,\n    room: item.salle,\n    teacher: item.prof,\n    kind: item.typeCours,\n    cancelled: item.isAnnule,\n    updated: item.isModifie,\n    notes: item.text\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeTimetableItem } from \"~/decoders/timetable-item\";\nimport {\n  type Account,\n  type Session,\n  SessionTokenRequired,\n  type TimetableItem\n} from \"~/models\";\n\n/**\n * @param startDate Timetable starting from this date.\n * @param endDate When not defined, it's the same as `from` so it displays the timetable for the day.\n */\nexport const studentTimetable = async (\n  session: Session,\n  account: Account,\n  startDate: Date,\n  endDate = startDate\n): Promise<Array<TimetableItem>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(`/E/${account.id}/emploidutemps.awp?verbe=get`)\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({\n      dateDebut: startDate.toLocaleDateString(\"fr-CA\"),\n      dateFin: endDate.toLocaleDateString(\"fr-CA\"),\n      avecTrous: false\n    });\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  return response.data\n    .map(decodeTimetableItem)\n    .sort(\n      (item: TimetableItem, item2: TimetableItem) =>\n        new Date(item.startDate).getTime() > new Date(item2.startDate).getTime()\n    );\n};\n","import { Request } from \"~/core/request\";\nimport { type Account, type Session, SessionTokenRequired } from \"~/models\";\n\nexport const studentVisios = async (\n  session: Session,\n  account: Account\n): Promise<Array<unknown>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(`/eleves/${account.id}/visios.awp?verbe=get`)\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  // TODO: a decoder for this, when we know what does it return.\n  return response.data;\n};\n","import { decode } from \"js-base64\";\nimport type { WorkspaceItem } from \"~/models\";\n\nexport const decodeWorkspace = (item: any): WorkspaceItem => {\n  return {\n    id: item.id,\n    title: item.titre,\n    description: item.description,\n    summary: decode(item.resume),\n    cloud: item.cloud,\n    discussion: item.discussion,\n    agenda: item.agenda,\n    isPublic: item.public,\n    isOpen: item.ouvert,\n    kind: item.type,\n    isMember: item.estMembre,\n    isAdmin: item.estAdmin,\n    teacherRooms: item.salleDesProfs,\n    createdBy: item.creePar,\n    permissions: item.droitUtilisateur,\n    nbMembers: item.nbMembres,\n    colorEventAgenda: item.couleurEvenementAgenda,\n    createdAt: item.creeLe\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeWorkspace } from \"~/decoders/workspace-item\";\nimport {\n  type Account,\n  type Session,\n  SessionTokenRequired,\n  type WorkspaceItem\n} from \"~/models\";\n\nexport const studentWorkspace = async (\n  session: Session,\n  account: Account\n): Promise<Array<WorkspaceItem>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(`/E/${account.id}/espacestravail.awp?verbe=get`)\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  return response.data?.map(decodeWorkspace) ?? [];\n};\n","import { BadDoubleAuth, type DoubleAuth } from \"~/models\";\n\nexport const decodeDoubleAuth = (double_auth: any): DoubleAuth => {\n  if (double_auth === null) throw new BadDoubleAuth();\n\n  return {\n    name: double_auth.cn,\n    value: double_auth.cv\n  };\n};\n","import { decode } from \"js-base64\";\nimport type { DoubleAuthChallenge } from \"~/models\";\n\nexport const decodeDoubleAuthChallenge = (\n  challenge: any\n): DoubleAuthChallenge => {\n  return {\n    question: decode(challenge.question),\n    answers: challenge.propositions.map(decode)\n  };\n};\n","import { Request } from \"~/core/request\";\nimport { decodeDoubleAuth } from \"~/decoders/double-auth\";\nimport { decodeDoubleAuthChallenge } from \"~/decoders/double-auth-challenge\";\nimport {\n  BadCredentials,\n  type DoubleAuthChallenge,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\n\nimport { encode } from \"js-base64\";\n\nexport const initDoubleAuth = async (\n  session: Session\n): Promise<DoubleAuthChallenge> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\"/connexion/doubleauth.awp?verbe=get\")\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({});\n\n  const response = await request.send(session.fetcher);\n\n  if (!response.token) throw new BadCredentials();\n  session.token = response.token;\n\n  return decodeDoubleAuthChallenge(response.data);\n};\n\nexport const checkDoubleAuth = async (\n  session: Session,\n  answer: string\n): Promise<boolean> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = new Request(\"/connexion/doubleauth.awp?verbe=post\")\n    .addVersionURL()\n    .setToken(session.token)\n    .setFormData({\n      choix: encode(answer)\n    });\n\n  const response = await request.send(session.fetcher);\n\n  session.token = response.token;\n  session.double_auth = decodeDoubleAuth(response.data);\n\n  return true;\n};\n","import { AccountKind, UnknownEnumValue } from \"~/models\";\n\nexport const decodeAccountKind = (kind: any): AccountKind => {\n  kind = String(kind);\n\n  // We assert that the value is a valid AccountKind value.\n  if (!Object.values(AccountKind).includes(kind)) {\n    throw new UnknownEnumValue(\"AccountKind\", kind);\n  }\n\n  return kind as AccountKind;\n};\n","import { decodeAccountKind } from \"~/decoders/account-kind\";\nimport type { Account } from \"~/models/account\";\n\nexport const decodeAccount = (account: any): Account => {\n  const gender =\n    typeof account.profile.sexe !== \"undefined\" && account.profile.sexe !== null\n      ? account.profile.sexe\n      : account.civilite === \"Mme\"\n        ? \"F\"\n        : \"M\";\n\n  return {\n    loginID: account.idLogin,\n    id: account.id,\n    userID: account.uid,\n    username: account.identifiant,\n    kind: decodeAccountKind(account.typeCompte),\n    ogecID: account.codeOgec,\n    main: account.main,\n    lastConnection: account.lastConnexion,\n    firstName: account.prenom,\n    lastName: account.nom,\n    email: account.email,\n    phone: account.profile.telPortable,\n    schoolName: account.nomEtablissement,\n    schoolUAI: account.profile.rneEtablissement,\n    schoolLogoPath: account.logoEtablissement,\n    schoolAgendaColor: account.couleurAgendaEtablissement,\n    access_token: account.accessToken,\n    socket_token: account.socketToken,\n    gender,\n    profilePictureURL: account.profile.photo,\n    modules: account.modules,\n    currentSchoolCycle: account.anneeScolaireCourante,\n    class: {\n      short: account.profile.classe.code,\n      long: account.profile.classe.libelle\n    }\n  };\n};\n","import type { DoubleAuth } from \"~/models/double-auth\";\n\nexport const encodeDoubleAuth = (\n  double_auth: DoubleAuth | null | undefined\n): any => {\n  return double_auth\n    ? {\n      cn: double_auth.name,\n      cv: double_auth.value\n    }\n    : void 0;\n};\n","import {\n  type Account,\n  type AccountKind,\n  BadCredentials,\n  DoubleAuthRequired,\n  InvalidVersion,\n  type Session,\n  SessionTokenRequired\n} from \"~/models\";\n\nimport { Request } from \"~/core/request\";\nimport { decodeAccount } from \"~/decoders/account\";\nimport { encodeDoubleAuth } from \"~/encoders/double-auth\";\nimport { getCookiesFromResponse } from \"@literate.ink/utilities\";\n\nconst init = async (\n  body: Record<string, unknown>,\n  token: string | null = null\n): Promise<Request> => {\n  let gtk: string | undefined;\n  let cookies: string[];\n\n  {\n    const request = new Request(\"/login.awp?gtk=1\").addVersionURL();\n    const response = await request.sendRaw();\n    cookies = getCookiesFromResponse(response);\n\n    for (const cookie of cookies) {\n      const [key, value] = cookie.split(\"=\");\n      if (key === \"GTK\") gtk = value;\n    }\n\n    if (!gtk) {\n      throw new Error(\"GTK cookie not found in response\");\n    }\n  }\n\n  const request = new Request(\"/login.awp\").addVersionURL().setFormData(body);\n  request.headers[\"X-GTK\"] = gtk;\n  request.headers[\"Cookie\"] = cookies.join(\"; \");\n\n  if (token) request.setToken(token);\n  return request;\n};\n\nexport const login = async (\n  session: Session,\n  password: string\n): Promise<Array<Account>> => {\n  const encoded_double_auth = encodeDoubleAuth(session.double_auth);\n  const request = await init(\n    {\n      ...encoded_double_auth,\n      fa: encoded_double_auth && [encoded_double_auth],\n\n      identifiant: session.username,\n      uuid: session.device_uuid,\n      isReLogin: false,\n      sesouvenirdemoi: true,\n      motdepasse: encodeURIComponent(password)\n    },\n    session.token\n  );\n\n  return pipe(session, request);\n};\n\nexport const refresh = async (\n  session: Session,\n  account_kind: AccountKind\n): Promise<Array<Account>> => {\n  if (!session.token) throw new SessionTokenRequired();\n\n  const request = await init(\n    {\n      fa: [encodeDoubleAuth(session.double_auth)],\n\n      identifiant: session.username,\n      uuid: session.device_uuid,\n      isReLogin: true,\n      motdepasse: \"???\",\n      typeCompte: account_kind,\n      accesstoken: session.accessToken\n    },\n    session.token\n  );\n\n  return pipe(session, request);\n};\n\nconst pipe = async (\n  session: Session,\n  request: Request\n): Promise<Array<Account>> => {\n  const response = await request.send(session.fetcher);\n  session.token = response.token;\n\n  switch (response.status) {\n    case 505:\n      throw new BadCredentials();\n    case 517:\n      throw new InvalidVersion();\n    case 250:\n      throw new DoubleAuthRequired();\n  }\n\n  return response.data.accounts.map(decodeAccount);\n};\n\nexport const setAccessToken = (session: Session, account: Account) => {\n  session.accessToken = account.access_token;\n};\n"]}